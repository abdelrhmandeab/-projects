
Final Project For College.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ba  00000000  00000000  00000114  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000ba  0000029d  2**0
                  ALLOC
  2 .bss          00000003  00800060  00800060  000013e4  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000013e4  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 000000e0  00000000  00000000  00001413  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  000014f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000042dd  00000000  00000000  00001793  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ec5  00000000  00000000  00005a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000155f  00000000  00000000  00006935  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000056c  00000000  00000000  00007e94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fa  00000000  00000000  00008400  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016fb  00000000  00000000  000088fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  00009ff5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000012b2  000012b2  000013c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000a1d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.ADC_Vid_Init 00000026  000010bc  000010bc  000011d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.ADC_u16_Read 00000022  000010e2  000010e2  000011f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.buzzer_vid_init 0000000c  00001256  00001256  0000136a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.buzzer_vid_on 0000000c  00001262  00001262  00001376  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.buzzer_vid_off 0000000c  0000126e  0000126e  00001382  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.DIO_Vid_Set_Pin_Dir 000000e2  000008d0  000008d0  000009e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.DIO_Vid_Set_Pin_Val 000000e2  000009b2  000009b2  00000ac6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.DIO_u8_Get_Pin_Val 0000005c  00000dae  00000dae  00000ec2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.DIO_Vid_Set_Port_Dir 00000020  00001148  00001148  0000125c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.EXT_Vid_Interrupt_Init 0000001a  000011a4  000011a4  000012b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.EXT_Vid_Enable_Interrupt0 00000008  00001286  00001286  0000139a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.__vector_3 00000014  00001218  00001218  0000132c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.GIE_Vid_Interrupt_Enable 00000008  0000128e  0000128e  000013a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.KEYPAD_Vid_Init 000000a2  00000b68  00000b68  00000c7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.KEYPAD_u8_Get_Key 000000e4  000007ec  000007ec  00000900  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .data.KEYPAD_Data 00000010  00800063  000012c0  000013d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 31 .text.SHDATA  00000064  00000cec  00000cec  00000e00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.Send_Enable 00000022  00001104  00001104  00001218  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.LCD_Vid_Send_Command 00000034  00000fdc  00000fdc  000010f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.LCD_Vid_Send_Data 00000034  00001010  00001010  00001124  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.LCD_Vid_Init 0000003e  00000f32  00000f32  00001046  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.LCD_Vid_Send_String 00000036  00000f70  00000f70  00001084  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.LCD_Vid_Send_Number 000000fa  000006f2  000006f2  00000806  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.LCD_Vid_GotoXY 00000016  000011d6  000011d6  000012ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .progmemx.data 000000cf  000000ba  000000ba  000001ce  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 40 .text.password 000001f8  0000018a  0000018a  0000029e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.calculator 00000106  000005ec  000005ec  00000700  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.parkingSensor 00000068  00000c84  00000c84  00000d98  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.tempSensor 0000005a  00000e0a  00000e0a  00000f1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.main    00000140  00000382  00000382  00000496  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.Tim1_Vid_Fast_Pwm_ICR1_Init 00000040  00000ef2  00000ef2  00001006  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.Tim1_Vid_Set_Compare_Val 00000006  000012a6  000012a6  000013ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.TIMER0_Vid_Init 00000036  00000fa6  00000fa6  000010ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.UART_Vid_Init 00000016  000011ec  000011ec  00001300  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.UART_u8_RX 00000008  00001296  00001296  000013aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.ULTRASONIC_Vid_Init 0000001e  00001168  00001168  0000127c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.ULTRASONIC_Vid_Trig 00000028  00001044  00001044  00001158  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.__vector_1 0000012a  000004c2  000004c2  000005d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.__vector_11 0000004a  00000e64  00000e64  00000f78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .bss.timer_counter 00000002  00800073  00800073  000013e4  2**0
                  ALLOC
 55 .bss.rising_edge 00000001  00800075  00800075  000013e4  2**0
                  ALLOC
 56 .bss.pulse_flag 00000001  00800076  00800076  000013e4  2**0
                  ALLOC
 57 .text         0000005e  00000d50  00000d50  00000e64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text         0000007a  00000c0a  00000c0a  00000d1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text         0000000c  0000127a  0000127a  0000138e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text         00000006  000012ac  000012ac  000013c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text         0000000e  0000122c  0000122c  00001340  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text         0000000e  0000123a  0000123a  0000134e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text         00000022  00001126  00001126  0000123a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text         00000044  00000eae  00000eae  00000fc2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text         0000000e  00001248  00001248  0000135c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text         00000008  0000129e  0000129e  000013b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text         000000d4  00000a94  00000a94  00000ba8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.libgcc.div 00000018  000011be  000011be  000012d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.libgcc.div 00000028  0000106c  0000106c  00001180  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.libgcc.mul 0000001e  00001186  00001186  0000129a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.libgcc.div 00000028  00001094  00001094  000011a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.__dummy_fini 00000002  000012ba  000012ba  000013ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.__dummy_funcs_on_exit 00000002  000012bc  000012bc  000013d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.__dummy_simulator_exit 00000002  000012be  000012be  000013d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.exit    00000016  00001202  00001202  00001316  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text._Exit   00000004  000012b6  000012b6  000013ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 33 00 	jmp	0x66	; 0x66 <__ctors_end>
   4:	0c 94 61 02 	jmp	0x4c2	; 0x4c2 <__vector_1>
   8:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
   c:	0c 94 0c 09 	jmp	0x1218	; 0x1218 <__vector_3>
  10:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  14:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  18:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  1c:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  20:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  24:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  28:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  2c:	0c 94 32 07 	jmp	0xe64	; 0xe64 <__vector_11>
  30:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  34:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  38:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  3c:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  40:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  44:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  48:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  4c:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>
  50:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 63       	ori	r16, 0x30	; 48
  58:	80 00       	.word	0x0080	; ????
  5a:	63 00       	.word	0x0063	; ????
  5c:	73 00       	.word	0x0073	; ????
  5e:	12 c0       	rjmp	.+36     	; 0x84 <__do_copy_data+0x12>
  60:	00 73       	andi	r16, 0x30	; 48
  62:	00 77       	andi	r16, 0x70	; 112
  64:	80 00       	.word	0x0080	; ????

00000066 <__ctors_end>:
  66:	11 24       	eor	r1, r1
  68:	1f be       	out	0x3f, r1	; 63
  6a:	cf e5       	ldi	r28, 0x5F	; 95
  6c:	d8 e0       	ldi	r29, 0x08	; 8
  6e:	de bf       	out	0x3e, r29	; 62
  70:	cd bf       	out	0x3d, r28	; 61

00000072 <__do_copy_data>:
  72:	e4 e5       	ldi	r30, 0x54	; 84
  74:	f0 e0       	ldi	r31, 0x00	; 0
  76:	40 e0       	ldi	r20, 0x00	; 0
  78:	17 c0       	rjmp	.+46     	; 0xa8 <__do_clear_bss+0x8>
  7a:	b5 91       	lpm	r27, Z+
  7c:	a5 91       	lpm	r26, Z+
  7e:	35 91       	lpm	r19, Z+
  80:	25 91       	lpm	r18, Z+
  82:	05 91       	lpm	r16, Z+
  84:	07 fd       	sbrc	r16, 7
  86:	0c c0       	rjmp	.+24     	; 0xa0 <__do_clear_bss>
  88:	95 91       	lpm	r25, Z+
  8a:	85 91       	lpm	r24, Z+
  8c:	ef 01       	movw	r28, r30
  8e:	f9 2f       	mov	r31, r25
  90:	e8 2f       	mov	r30, r24
  92:	05 90       	lpm	r0, Z+
  94:	0d 92       	st	X+, r0
  96:	a2 17       	cp	r26, r18
  98:	b3 07       	cpc	r27, r19
  9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0x20>
  9c:	fe 01       	movw	r30, r28
  9e:	04 c0       	rjmp	.+8      	; 0xa8 <__do_clear_bss+0x8>

000000a0 <__do_clear_bss>:
  a0:	1d 92       	st	X+, r1
  a2:	a2 17       	cp	r26, r18
  a4:	b3 07       	cpc	r27, r19
  a6:	e1 f7       	brne	.-8      	; 0xa0 <__do_clear_bss>
  a8:	e5 36       	cpi	r30, 0x65	; 101
  aa:	f4 07       	cpc	r31, r20
  ac:	31 f7       	brne	.-52     	; 0x7a <__do_copy_data+0x8>
  ae:	0e 94 c1 01 	call	0x382	; 0x382 <main>
  b2:	0c 94 01 09 	jmp	0x1202	; 0x1202 <exit>

000000b6 <_exit>:
  b6:	f8 94       	cli

000000b8 <__stop_program>:
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <__stop_program>

Disassembly of section .text:

000012b2 <__bad_interrupt>:
    12b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.ADC_Vid_Init:

000010bc <ADC_Vid_Init>:
    10bc:	87 b1       	in	r24, 0x07	; 7
    10be:	80 64       	ori	r24, 0x40	; 64
    10c0:	87 b9       	out	0x07, r24	; 7
    10c2:	87 b1       	in	r24, 0x07	; 7
    10c4:	8f 77       	andi	r24, 0x7F	; 127
    10c6:	87 b9       	out	0x07, r24	; 7
    10c8:	86 b1       	in	r24, 0x06	; 6
    10ca:	81 60       	ori	r24, 0x01	; 1
    10cc:	86 b9       	out	0x06, r24	; 6
    10ce:	86 b1       	in	r24, 0x06	; 6
    10d0:	82 60       	ori	r24, 0x02	; 2
    10d2:	86 b9       	out	0x06, r24	; 6
    10d4:	86 b1       	in	r24, 0x06	; 6
    10d6:	84 60       	ori	r24, 0x04	; 4
    10d8:	86 b9       	out	0x06, r24	; 6
    10da:	86 b1       	in	r24, 0x06	; 6
    10dc:	80 68       	ori	r24, 0x80	; 128
    10de:	86 b9       	out	0x06, r24	; 6
    10e0:	08 95       	ret

Disassembly of section .text.ADC_u16_Read:

000010e2 <ADC_u16_Read>:
    10e2:	97 b1       	in	r25, 0x07	; 7
    10e4:	90 7e       	andi	r25, 0xE0	; 224
    10e6:	97 b9       	out	0x07, r25	; 7
    10e8:	97 b1       	in	r25, 0x07	; 7
    10ea:	89 2b       	or	r24, r25
    10ec:	87 b9       	out	0x07, r24	; 7
    10ee:	86 b1       	in	r24, 0x06	; 6
    10f0:	80 64       	ori	r24, 0x40	; 64
    10f2:	86 b9       	out	0x06, r24	; 6
    10f4:	34 9b       	sbis	0x06, 4	; 6
    10f6:	fe cf       	rjmp	.-4      	; 0x10f4 <ADC_u16_Read+0x12>
    10f8:	86 b1       	in	r24, 0x06	; 6
    10fa:	80 61       	ori	r24, 0x10	; 16
    10fc:	86 b9       	out	0x06, r24	; 6
    10fe:	84 b1       	in	r24, 0x04	; 4
    1100:	95 b1       	in	r25, 0x05	; 5
    1102:	08 95       	ret

Disassembly of section .text.buzzer_vid_init:

00001256 <buzzer_vid_init>:
    1256:	41 e0       	ldi	r20, 0x01	; 1
    1258:	63 e0       	ldi	r22, 0x03	; 3
    125a:	80 e0       	ldi	r24, 0x00	; 0
    125c:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
    1260:	08 95       	ret

Disassembly of section .text.buzzer_vid_on:

00001262 <buzzer_vid_on>:
    1262:	41 e0       	ldi	r20, 0x01	; 1
    1264:	63 e0       	ldi	r22, 0x03	; 3
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
    126c:	08 95       	ret

Disassembly of section .text.buzzer_vid_off:

0000126e <buzzer_vid_off>:
    126e:	40 e0       	ldi	r20, 0x00	; 0
    1270:	63 e0       	ldi	r22, 0x03	; 3
    1272:	80 e0       	ldi	r24, 0x00	; 0
    1274:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
    1278:	08 95       	ret

Disassembly of section .text.DIO_Vid_Set_Pin_Dir:

000008d0 <DIO_Vid_Set_Pin_Dir>:
 8d0:	42 30       	cpi	r20, 0x02	; 2
 8d2:	08 f0       	brcs	.+2      	; 0x8d6 <DIO_Vid_Set_Pin_Dir+0x6>
 8d4:	6d c0       	rjmp	.+218    	; 0x9b0 <DIO_Vid_Set_Pin_Dir+0xe0>
 8d6:	41 30       	cpi	r20, 0x01	; 1
 8d8:	a1 f5       	brne	.+104    	; 0x942 <DIO_Vid_Set_Pin_Dir+0x72>
 8da:	81 30       	cpi	r24, 0x01	; 1
 8dc:	89 f0       	breq	.+34     	; 0x900 <DIO_Vid_Set_Pin_Dir+0x30>
 8de:	28 f0       	brcs	.+10     	; 0x8ea <DIO_Vid_Set_Pin_Dir+0x1a>
 8e0:	82 30       	cpi	r24, 0x02	; 2
 8e2:	c9 f0       	breq	.+50     	; 0x916 <DIO_Vid_Set_Pin_Dir+0x46>
 8e4:	83 30       	cpi	r24, 0x03	; 3
 8e6:	11 f1       	breq	.+68     	; 0x92c <DIO_Vid_Set_Pin_Dir+0x5c>
 8e8:	08 95       	ret
 8ea:	2a b3       	in	r18, 0x1a	; 26
 8ec:	81 e0       	ldi	r24, 0x01	; 1
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <DIO_Vid_Set_Pin_Dir+0x26>
 8f2:	88 0f       	add	r24, r24
 8f4:	99 1f       	adc	r25, r25
 8f6:	6a 95       	dec	r22
 8f8:	e2 f7       	brpl	.-8      	; 0x8f2 <DIO_Vid_Set_Pin_Dir+0x22>
 8fa:	82 2b       	or	r24, r18
 8fc:	8a bb       	out	0x1a, r24	; 26
 8fe:	08 95       	ret
 900:	27 b3       	in	r18, 0x17	; 23
 902:	81 e0       	ldi	r24, 0x01	; 1
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	02 c0       	rjmp	.+4      	; 0x90c <DIO_Vid_Set_Pin_Dir+0x3c>
 908:	88 0f       	add	r24, r24
 90a:	99 1f       	adc	r25, r25
 90c:	6a 95       	dec	r22
 90e:	e2 f7       	brpl	.-8      	; 0x908 <DIO_Vid_Set_Pin_Dir+0x38>
 910:	82 2b       	or	r24, r18
 912:	87 bb       	out	0x17, r24	; 23
 914:	08 95       	ret
 916:	24 b3       	in	r18, 0x14	; 20
 918:	81 e0       	ldi	r24, 0x01	; 1
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	02 c0       	rjmp	.+4      	; 0x922 <DIO_Vid_Set_Pin_Dir+0x52>
 91e:	88 0f       	add	r24, r24
 920:	99 1f       	adc	r25, r25
 922:	6a 95       	dec	r22
 924:	e2 f7       	brpl	.-8      	; 0x91e <DIO_Vid_Set_Pin_Dir+0x4e>
 926:	82 2b       	or	r24, r18
 928:	84 bb       	out	0x14, r24	; 20
 92a:	08 95       	ret
 92c:	21 b3       	in	r18, 0x11	; 17
 92e:	81 e0       	ldi	r24, 0x01	; 1
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	02 c0       	rjmp	.+4      	; 0x938 <DIO_Vid_Set_Pin_Dir+0x68>
 934:	88 0f       	add	r24, r24
 936:	99 1f       	adc	r25, r25
 938:	6a 95       	dec	r22
 93a:	e2 f7       	brpl	.-8      	; 0x934 <DIO_Vid_Set_Pin_Dir+0x64>
 93c:	82 2b       	or	r24, r18
 93e:	81 bb       	out	0x11, r24	; 17
 940:	08 95       	ret
 942:	81 30       	cpi	r24, 0x01	; 1
 944:	91 f0       	breq	.+36     	; 0x96a <DIO_Vid_Set_Pin_Dir+0x9a>
 946:	28 f0       	brcs	.+10     	; 0x952 <DIO_Vid_Set_Pin_Dir+0x82>
 948:	82 30       	cpi	r24, 0x02	; 2
 94a:	d9 f0       	breq	.+54     	; 0x982 <DIO_Vid_Set_Pin_Dir+0xb2>
 94c:	83 30       	cpi	r24, 0x03	; 3
 94e:	29 f1       	breq	.+74     	; 0x99a <DIO_Vid_Set_Pin_Dir+0xca>
 950:	08 95       	ret
 952:	2a b3       	in	r18, 0x1a	; 26
 954:	81 e0       	ldi	r24, 0x01	; 1
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	02 c0       	rjmp	.+4      	; 0x95e <DIO_Vid_Set_Pin_Dir+0x8e>
 95a:	88 0f       	add	r24, r24
 95c:	99 1f       	adc	r25, r25
 95e:	6a 95       	dec	r22
 960:	e2 f7       	brpl	.-8      	; 0x95a <DIO_Vid_Set_Pin_Dir+0x8a>
 962:	80 95       	com	r24
 964:	82 23       	and	r24, r18
 966:	8a bb       	out	0x1a, r24	; 26
 968:	08 95       	ret
 96a:	27 b3       	in	r18, 0x17	; 23
 96c:	81 e0       	ldi	r24, 0x01	; 1
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	02 c0       	rjmp	.+4      	; 0x976 <DIO_Vid_Set_Pin_Dir+0xa6>
 972:	88 0f       	add	r24, r24
 974:	99 1f       	adc	r25, r25
 976:	6a 95       	dec	r22
 978:	e2 f7       	brpl	.-8      	; 0x972 <DIO_Vid_Set_Pin_Dir+0xa2>
 97a:	80 95       	com	r24
 97c:	82 23       	and	r24, r18
 97e:	87 bb       	out	0x17, r24	; 23
 980:	08 95       	ret
 982:	24 b3       	in	r18, 0x14	; 20
 984:	81 e0       	ldi	r24, 0x01	; 1
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	02 c0       	rjmp	.+4      	; 0x98e <DIO_Vid_Set_Pin_Dir+0xbe>
 98a:	88 0f       	add	r24, r24
 98c:	99 1f       	adc	r25, r25
 98e:	6a 95       	dec	r22
 990:	e2 f7       	brpl	.-8      	; 0x98a <DIO_Vid_Set_Pin_Dir+0xba>
 992:	80 95       	com	r24
 994:	82 23       	and	r24, r18
 996:	84 bb       	out	0x14, r24	; 20
 998:	08 95       	ret
 99a:	21 b3       	in	r18, 0x11	; 17
 99c:	81 e0       	ldi	r24, 0x01	; 1
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <DIO_Vid_Set_Pin_Dir+0xd6>
 9a2:	88 0f       	add	r24, r24
 9a4:	99 1f       	adc	r25, r25
 9a6:	6a 95       	dec	r22
 9a8:	e2 f7       	brpl	.-8      	; 0x9a2 <DIO_Vid_Set_Pin_Dir+0xd2>
 9aa:	80 95       	com	r24
 9ac:	82 23       	and	r24, r18
 9ae:	81 bb       	out	0x11, r24	; 17
 9b0:	08 95       	ret

Disassembly of section .text.DIO_Vid_Set_Pin_Val:

000009b2 <DIO_Vid_Set_Pin_Val>:
 9b2:	42 30       	cpi	r20, 0x02	; 2
 9b4:	08 f0       	brcs	.+2      	; 0x9b8 <DIO_Vid_Set_Pin_Val+0x6>
 9b6:	6d c0       	rjmp	.+218    	; 0xa92 <DIO_Vid_Set_Pin_Val+0xe0>
 9b8:	41 30       	cpi	r20, 0x01	; 1
 9ba:	a1 f5       	brne	.+104    	; 0xa24 <DIO_Vid_Set_Pin_Val+0x72>
 9bc:	81 30       	cpi	r24, 0x01	; 1
 9be:	89 f0       	breq	.+34     	; 0x9e2 <DIO_Vid_Set_Pin_Val+0x30>
 9c0:	28 f0       	brcs	.+10     	; 0x9cc <DIO_Vid_Set_Pin_Val+0x1a>
 9c2:	82 30       	cpi	r24, 0x02	; 2
 9c4:	c9 f0       	breq	.+50     	; 0x9f8 <DIO_Vid_Set_Pin_Val+0x46>
 9c6:	83 30       	cpi	r24, 0x03	; 3
 9c8:	11 f1       	breq	.+68     	; 0xa0e <DIO_Vid_Set_Pin_Val+0x5c>
 9ca:	08 95       	ret
 9cc:	2b b3       	in	r18, 0x1b	; 27
 9ce:	81 e0       	ldi	r24, 0x01	; 1
 9d0:	90 e0       	ldi	r25, 0x00	; 0
 9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <DIO_Vid_Set_Pin_Val+0x26>
 9d4:	88 0f       	add	r24, r24
 9d6:	99 1f       	adc	r25, r25
 9d8:	6a 95       	dec	r22
 9da:	e2 f7       	brpl	.-8      	; 0x9d4 <DIO_Vid_Set_Pin_Val+0x22>
 9dc:	82 2b       	or	r24, r18
 9de:	8b bb       	out	0x1b, r24	; 27
 9e0:	08 95       	ret
 9e2:	28 b3       	in	r18, 0x18	; 24
 9e4:	81 e0       	ldi	r24, 0x01	; 1
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	02 c0       	rjmp	.+4      	; 0x9ee <DIO_Vid_Set_Pin_Val+0x3c>
 9ea:	88 0f       	add	r24, r24
 9ec:	99 1f       	adc	r25, r25
 9ee:	6a 95       	dec	r22
 9f0:	e2 f7       	brpl	.-8      	; 0x9ea <DIO_Vid_Set_Pin_Val+0x38>
 9f2:	82 2b       	or	r24, r18
 9f4:	88 bb       	out	0x18, r24	; 24
 9f6:	08 95       	ret
 9f8:	25 b3       	in	r18, 0x15	; 21
 9fa:	81 e0       	ldi	r24, 0x01	; 1
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	02 c0       	rjmp	.+4      	; 0xa04 <DIO_Vid_Set_Pin_Val+0x52>
 a00:	88 0f       	add	r24, r24
 a02:	99 1f       	adc	r25, r25
 a04:	6a 95       	dec	r22
 a06:	e2 f7       	brpl	.-8      	; 0xa00 <DIO_Vid_Set_Pin_Val+0x4e>
 a08:	82 2b       	or	r24, r18
 a0a:	85 bb       	out	0x15, r24	; 21
 a0c:	08 95       	ret
 a0e:	22 b3       	in	r18, 0x12	; 18
 a10:	81 e0       	ldi	r24, 0x01	; 1
 a12:	90 e0       	ldi	r25, 0x00	; 0
 a14:	02 c0       	rjmp	.+4      	; 0xa1a <DIO_Vid_Set_Pin_Val+0x68>
 a16:	88 0f       	add	r24, r24
 a18:	99 1f       	adc	r25, r25
 a1a:	6a 95       	dec	r22
 a1c:	e2 f7       	brpl	.-8      	; 0xa16 <DIO_Vid_Set_Pin_Val+0x64>
 a1e:	82 2b       	or	r24, r18
 a20:	82 bb       	out	0x12, r24	; 18
 a22:	08 95       	ret
 a24:	81 30       	cpi	r24, 0x01	; 1
 a26:	91 f0       	breq	.+36     	; 0xa4c <DIO_Vid_Set_Pin_Val+0x9a>
 a28:	28 f0       	brcs	.+10     	; 0xa34 <DIO_Vid_Set_Pin_Val+0x82>
 a2a:	82 30       	cpi	r24, 0x02	; 2
 a2c:	d9 f0       	breq	.+54     	; 0xa64 <DIO_Vid_Set_Pin_Val+0xb2>
 a2e:	83 30       	cpi	r24, 0x03	; 3
 a30:	29 f1       	breq	.+74     	; 0xa7c <DIO_Vid_Set_Pin_Val+0xca>
 a32:	08 95       	ret
 a34:	2b b3       	in	r18, 0x1b	; 27
 a36:	81 e0       	ldi	r24, 0x01	; 1
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	02 c0       	rjmp	.+4      	; 0xa40 <DIO_Vid_Set_Pin_Val+0x8e>
 a3c:	88 0f       	add	r24, r24
 a3e:	99 1f       	adc	r25, r25
 a40:	6a 95       	dec	r22
 a42:	e2 f7       	brpl	.-8      	; 0xa3c <DIO_Vid_Set_Pin_Val+0x8a>
 a44:	80 95       	com	r24
 a46:	82 23       	and	r24, r18
 a48:	8b bb       	out	0x1b, r24	; 27
 a4a:	08 95       	ret
 a4c:	28 b3       	in	r18, 0x18	; 24
 a4e:	81 e0       	ldi	r24, 0x01	; 1
 a50:	90 e0       	ldi	r25, 0x00	; 0
 a52:	02 c0       	rjmp	.+4      	; 0xa58 <DIO_Vid_Set_Pin_Val+0xa6>
 a54:	88 0f       	add	r24, r24
 a56:	99 1f       	adc	r25, r25
 a58:	6a 95       	dec	r22
 a5a:	e2 f7       	brpl	.-8      	; 0xa54 <DIO_Vid_Set_Pin_Val+0xa2>
 a5c:	80 95       	com	r24
 a5e:	82 23       	and	r24, r18
 a60:	88 bb       	out	0x18, r24	; 24
 a62:	08 95       	ret
 a64:	25 b3       	in	r18, 0x15	; 21
 a66:	81 e0       	ldi	r24, 0x01	; 1
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	02 c0       	rjmp	.+4      	; 0xa70 <DIO_Vid_Set_Pin_Val+0xbe>
 a6c:	88 0f       	add	r24, r24
 a6e:	99 1f       	adc	r25, r25
 a70:	6a 95       	dec	r22
 a72:	e2 f7       	brpl	.-8      	; 0xa6c <DIO_Vid_Set_Pin_Val+0xba>
 a74:	80 95       	com	r24
 a76:	82 23       	and	r24, r18
 a78:	85 bb       	out	0x15, r24	; 21
 a7a:	08 95       	ret
 a7c:	22 b3       	in	r18, 0x12	; 18
 a7e:	81 e0       	ldi	r24, 0x01	; 1
 a80:	90 e0       	ldi	r25, 0x00	; 0
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <DIO_Vid_Set_Pin_Val+0xd6>
 a84:	88 0f       	add	r24, r24
 a86:	99 1f       	adc	r25, r25
 a88:	6a 95       	dec	r22
 a8a:	e2 f7       	brpl	.-8      	; 0xa84 <DIO_Vid_Set_Pin_Val+0xd2>
 a8c:	80 95       	com	r24
 a8e:	82 23       	and	r24, r18
 a90:	82 bb       	out	0x12, r24	; 18
 a92:	08 95       	ret

Disassembly of section .text.DIO_u8_Get_Pin_Val:

00000dae <DIO_u8_Get_Pin_Val>:
 dae:	81 30       	cpi	r24, 0x01	; 1
 db0:	79 f0       	breq	.+30     	; 0xdd0 <DIO_u8_Get_Pin_Val+0x22>
 db2:	28 f0       	brcs	.+10     	; 0xdbe <DIO_u8_Get_Pin_Val+0x10>
 db4:	82 30       	cpi	r24, 0x02	; 2
 db6:	a9 f0       	breq	.+42     	; 0xde2 <DIO_u8_Get_Pin_Val+0x34>
 db8:	83 30       	cpi	r24, 0x03	; 3
 dba:	e1 f0       	breq	.+56     	; 0xdf4 <DIO_u8_Get_Pin_Val+0x46>
 dbc:	24 c0       	rjmp	.+72     	; 0xe06 <DIO_u8_Get_Pin_Val+0x58>
 dbe:	89 b3       	in	r24, 0x19	; 25
 dc0:	90 e0       	ldi	r25, 0x00	; 0
 dc2:	02 c0       	rjmp	.+4      	; 0xdc8 <DIO_u8_Get_Pin_Val+0x1a>
 dc4:	95 95       	asr	r25
 dc6:	87 95       	ror	r24
 dc8:	6a 95       	dec	r22
 dca:	e2 f7       	brpl	.-8      	; 0xdc4 <DIO_u8_Get_Pin_Val+0x16>
 dcc:	81 70       	andi	r24, 0x01	; 1
 dce:	08 95       	ret
 dd0:	86 b3       	in	r24, 0x16	; 22
 dd2:	90 e0       	ldi	r25, 0x00	; 0
 dd4:	02 c0       	rjmp	.+4      	; 0xdda <DIO_u8_Get_Pin_Val+0x2c>
 dd6:	95 95       	asr	r25
 dd8:	87 95       	ror	r24
 dda:	6a 95       	dec	r22
 ddc:	e2 f7       	brpl	.-8      	; 0xdd6 <DIO_u8_Get_Pin_Val+0x28>
 dde:	81 70       	andi	r24, 0x01	; 1
 de0:	08 95       	ret
 de2:	83 b3       	in	r24, 0x13	; 19
 de4:	90 e0       	ldi	r25, 0x00	; 0
 de6:	02 c0       	rjmp	.+4      	; 0xdec <DIO_u8_Get_Pin_Val+0x3e>
 de8:	95 95       	asr	r25
 dea:	87 95       	ror	r24
 dec:	6a 95       	dec	r22
 dee:	e2 f7       	brpl	.-8      	; 0xde8 <DIO_u8_Get_Pin_Val+0x3a>
 df0:	81 70       	andi	r24, 0x01	; 1
 df2:	08 95       	ret
 df4:	80 b3       	in	r24, 0x10	; 16
 df6:	90 e0       	ldi	r25, 0x00	; 0
 df8:	02 c0       	rjmp	.+4      	; 0xdfe <DIO_u8_Get_Pin_Val+0x50>
 dfa:	95 95       	asr	r25
 dfc:	87 95       	ror	r24
 dfe:	6a 95       	dec	r22
 e00:	e2 f7       	brpl	.-8      	; 0xdfa <DIO_u8_Get_Pin_Val+0x4c>
 e02:	81 70       	andi	r24, 0x01	; 1
 e04:	08 95       	ret
 e06:	80 e0       	ldi	r24, 0x00	; 0
 e08:	08 95       	ret

Disassembly of section .text.DIO_Vid_Set_Port_Dir:

00001148 <DIO_Vid_Set_Port_Dir>:
    1148:	81 30       	cpi	r24, 0x01	; 1
    114a:	41 f0       	breq	.+16     	; 0x115c <DIO_Vid_Set_Port_Dir+0x14>
    114c:	28 f0       	brcs	.+10     	; 0x1158 <DIO_Vid_Set_Port_Dir+0x10>
    114e:	82 30       	cpi	r24, 0x02	; 2
    1150:	39 f0       	breq	.+14     	; 0x1160 <DIO_Vid_Set_Port_Dir+0x18>
    1152:	83 30       	cpi	r24, 0x03	; 3
    1154:	39 f0       	breq	.+14     	; 0x1164 <DIO_Vid_Set_Port_Dir+0x1c>
    1156:	08 95       	ret
    1158:	6a bb       	out	0x1a, r22	; 26
    115a:	08 95       	ret
    115c:	67 bb       	out	0x17, r22	; 23
    115e:	08 95       	ret
    1160:	64 bb       	out	0x14, r22	; 20
    1162:	08 95       	ret
    1164:	61 bb       	out	0x11, r22	; 17
    1166:	08 95       	ret

Disassembly of section .text.EXT_Vid_Interrupt_Init:

000011a4 <EXT_Vid_Interrupt_Init>:
    11a4:	85 b7       	in	r24, 0x35	; 53
    11a6:	87 7f       	andi	r24, 0xF7	; 247
    11a8:	85 bf       	out	0x35, r24	; 53
    11aa:	85 b7       	in	r24, 0x35	; 53
    11ac:	84 60       	ori	r24, 0x04	; 4
    11ae:	85 bf       	out	0x35, r24	; 53
    11b0:	85 b7       	in	r24, 0x35	; 53
    11b2:	8d 7f       	andi	r24, 0xFD	; 253
    11b4:	85 bf       	out	0x35, r24	; 53
    11b6:	85 b7       	in	r24, 0x35	; 53
    11b8:	81 60       	ori	r24, 0x01	; 1
    11ba:	85 bf       	out	0x35, r24	; 53
    11bc:	08 95       	ret

Disassembly of section .text.EXT_Vid_Enable_Interrupt0:

00001286 <EXT_Vid_Enable_Interrupt0>:
    1286:	8b b7       	in	r24, 0x3b	; 59
    1288:	80 64       	ori	r24, 0x40	; 64
    128a:	8b bf       	out	0x3b, r24	; 59
    128c:	08 95       	ret

Disassembly of section .text.__vector_3:

00001218 <__vector_3>:
    1218:	1f 92       	push	r1
    121a:	0f 92       	push	r0
    121c:	0f b6       	in	r0, 0x3f	; 63
    121e:	0f 92       	push	r0
    1220:	11 24       	eor	r1, r1
    1222:	0f 90       	pop	r0
    1224:	0f be       	out	0x3f, r0	; 63
    1226:	0f 90       	pop	r0
    1228:	1f 90       	pop	r1
    122a:	18 95       	reti

Disassembly of section .text.GIE_Vid_Interrupt_Enable:

0000128e <GIE_Vid_Interrupt_Enable>:
    128e:	8f b7       	in	r24, 0x3f	; 63
    1290:	80 68       	ori	r24, 0x80	; 128
    1292:	8f bf       	out	0x3f, r24	; 63
    1294:	08 95       	ret

Disassembly of section .text.KEYPAD_Vid_Init:

00000b68 <KEYPAD_Vid_Init>:
						{'C','0','=','+'}		
	
};


void KEYPAD_Vid_Init(){
 b68:	0f 93       	push	r16
 b6a:	1f 93       	push	r17
 b6c:	cf 93       	push	r28
 b6e:	df 93       	push	r29
 b70:	cd b7       	in	r28, 0x3d	; 61
 b72:	de b7       	in	r29, 0x3e	; 62
 b74:	28 97       	sbiw	r28, 0x08	; 8
 b76:	0f b6       	in	r0, 0x3f	; 63
 b78:	f8 94       	cli
 b7a:	de bf       	out	0x3e, r29	; 62
 b7c:	0f be       	out	0x3f, r0	; 63
 b7e:	cd bf       	out	0x3d, r28	; 61
	u8 Loc_u8_col_arr[4]={KEYPAD_COL0_PIN,KEYPAD_COL1_PIN,KEYPAD_COL2_PIN,KEYPAD_COL3_PIN};
 b80:	87 e0       	ldi	r24, 0x07	; 7
 b82:	89 83       	std	Y+1, r24	; 0x01
 b84:	86 e0       	ldi	r24, 0x06	; 6
 b86:	8a 83       	std	Y+2, r24	; 0x02
 b88:	85 e0       	ldi	r24, 0x05	; 5
 b8a:	8b 83       	std	Y+3, r24	; 0x03
 b8c:	84 e0       	ldi	r24, 0x04	; 4
 b8e:	8c 83       	std	Y+4, r24	; 0x04
	
	u8 Loc_u8_row_arr[4]={KEYPAD_ROW4_PIN,KEYPAD_ROW5_PIN,KEYPAD_ROW6_PIN,KEYPAD_ROW7_PIN};
 b90:	1d 82       	std	Y+5, r1	; 0x05
 b92:	91 e0       	ldi	r25, 0x01	; 1
 b94:	9e 83       	std	Y+6, r25	; 0x06
 b96:	93 e0       	ldi	r25, 0x03	; 3
 b98:	9f 83       	std	Y+7, r25	; 0x07
 b9a:	88 87       	std	Y+8, r24	; 0x08
		
		u8 Loc_u8_in=0;
		
		/*  initialization COL */
	for(Loc_u8_in=0;Loc_u8_in<4;Loc_u8_in++)
 b9c:	10 e0       	ldi	r17, 0x00	; 0
 b9e:	12 c0       	rjmp	.+36     	; 0xbc4 <KEYPAD_Vid_Init+0x5c>
	{
		
		DIO_Vid_Set_Pin_Dir(KEYPAD_COL_PORT,Loc_u8_col_arr[Loc_u8_in],OUTPUT);
 ba0:	e1 e0       	ldi	r30, 0x01	; 1
 ba2:	f0 e0       	ldi	r31, 0x00	; 0
 ba4:	ec 0f       	add	r30, r28
 ba6:	fd 1f       	adc	r31, r29
 ba8:	e1 0f       	add	r30, r17
 baa:	f1 1d       	adc	r31, r1
 bac:	00 81       	ld	r16, Z
 bae:	41 e0       	ldi	r20, 0x01	; 1
 bb0:	60 2f       	mov	r22, r16
 bb2:	81 e0       	ldi	r24, 0x01	; 1
 bb4:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
		DIO_Vid_Set_Pin_Val(KEYPAD_COL_PORT,Loc_u8_col_arr[Loc_u8_in],HIGH);
 bb8:	41 e0       	ldi	r20, 0x01	; 1
 bba:	60 2f       	mov	r22, r16
 bbc:	81 e0       	ldi	r24, 0x01	; 1
 bbe:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
	u8 Loc_u8_row_arr[4]={KEYPAD_ROW4_PIN,KEYPAD_ROW5_PIN,KEYPAD_ROW6_PIN,KEYPAD_ROW7_PIN};
		
		u8 Loc_u8_in=0;
		
		/*  initialization COL */
	for(Loc_u8_in=0;Loc_u8_in<4;Loc_u8_in++)
 bc2:	1f 5f       	subi	r17, 0xFF	; 255
 bc4:	14 30       	cpi	r17, 0x04	; 4
 bc6:	60 f3       	brcs	.-40     	; 0xba0 <KEYPAD_Vid_Init+0x38>
 bc8:	10 e0       	ldi	r17, 0x00	; 0
 bca:	12 c0       	rjmp	.+36     	; 0xbf0 <KEYPAD_Vid_Init+0x88>
	
		/*  initialization ROW */
		for(Loc_u8_in=0;Loc_u8_in<4;Loc_u8_in++)
		{
			
			DIO_Vid_Set_Pin_Dir(KEYPAD_ROW_PORT,Loc_u8_row_arr[Loc_u8_in],INPUT);
 bcc:	e5 e0       	ldi	r30, 0x05	; 5
 bce:	f0 e0       	ldi	r31, 0x00	; 0
 bd0:	ec 0f       	add	r30, r28
 bd2:	fd 1f       	adc	r31, r29
 bd4:	e1 0f       	add	r30, r17
 bd6:	f1 1d       	adc	r31, r1
 bd8:	00 81       	ld	r16, Z
 bda:	40 e0       	ldi	r20, 0x00	; 0
 bdc:	60 2f       	mov	r22, r16
 bde:	80 e0       	ldi	r24, 0x00	; 0
 be0:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
			
			/* ACTIVE PULL UP RESISTOR */
			DIO_Vid_Set_Pin_Val(KEYPAD_ROW_PORT,Loc_u8_row_arr[Loc_u8_in],HIGH);
 be4:	41 e0       	ldi	r20, 0x01	; 1
 be6:	60 2f       	mov	r22, r16
 be8:	80 e0       	ldi	r24, 0x00	; 0
 bea:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
		DIO_Vid_Set_Pin_Dir(KEYPAD_COL_PORT,Loc_u8_col_arr[Loc_u8_in],OUTPUT);
		DIO_Vid_Set_Pin_Val(KEYPAD_COL_PORT,Loc_u8_col_arr[Loc_u8_in],HIGH);
	}
	
		/*  initialization ROW */
		for(Loc_u8_in=0;Loc_u8_in<4;Loc_u8_in++)
 bee:	1f 5f       	subi	r17, 0xFF	; 255
 bf0:	14 30       	cpi	r17, 0x04	; 4
 bf2:	60 f3       	brcs	.-40     	; 0xbcc <KEYPAD_Vid_Init+0x64>
			DIO_Vid_Set_Pin_Val(KEYPAD_ROW_PORT,Loc_u8_row_arr[Loc_u8_in],HIGH);
		}
	
	
	
}
 bf4:	28 96       	adiw	r28, 0x08	; 8
 bf6:	0f b6       	in	r0, 0x3f	; 63
 bf8:	f8 94       	cli
 bfa:	de bf       	out	0x3e, r29	; 62
 bfc:	0f be       	out	0x3f, r0	; 63
 bfe:	cd bf       	out	0x3d, r28	; 61
 c00:	df 91       	pop	r29
 c02:	cf 91       	pop	r28
 c04:	1f 91       	pop	r17
 c06:	0f 91       	pop	r16
 c08:	08 95       	ret

Disassembly of section .text.KEYPAD_u8_Get_Key:

000007ec <KEYPAD_u8_Get_Key>:

u8 KEYPAD_u8_Get_Key()
{
 7ec:	af 92       	push	r10
 7ee:	bf 92       	push	r11
 7f0:	cf 92       	push	r12
 7f2:	df 92       	push	r13
 7f4:	ef 92       	push	r14
 7f6:	ff 92       	push	r15
 7f8:	0f 93       	push	r16
 7fa:	1f 93       	push	r17
 7fc:	cf 93       	push	r28
 7fe:	df 93       	push	r29
 800:	cd b7       	in	r28, 0x3d	; 61
 802:	de b7       	in	r29, 0x3e	; 62
 804:	28 97       	sbiw	r28, 0x08	; 8
 806:	0f b6       	in	r0, 0x3f	; 63
 808:	f8 94       	cli
 80a:	de bf       	out	0x3e, r29	; 62
 80c:	0f be       	out	0x3f, r0	; 63
 80e:	cd bf       	out	0x3d, r28	; 61
	
	u8 Loc_u8_col_arr[4]={KEYPAD_COL0_PIN,KEYPAD_COL1_PIN,KEYPAD_COL2_PIN,KEYPAD_COL3_PIN};
 810:	87 e0       	ldi	r24, 0x07	; 7
 812:	89 83       	std	Y+1, r24	; 0x01
 814:	86 e0       	ldi	r24, 0x06	; 6
 816:	8a 83       	std	Y+2, r24	; 0x02
 818:	85 e0       	ldi	r24, 0x05	; 5
 81a:	8b 83       	std	Y+3, r24	; 0x03
 81c:	84 e0       	ldi	r24, 0x04	; 4
 81e:	8c 83       	std	Y+4, r24	; 0x04
	
	u8 Loc_u8_row_arr[4]={KEYPAD_ROW4_PIN,KEYPAD_ROW5_PIN,KEYPAD_ROW6_PIN,KEYPAD_ROW7_PIN};
 820:	1d 82       	std	Y+5, r1	; 0x05
 822:	91 e0       	ldi	r25, 0x01	; 1
 824:	9e 83       	std	Y+6, r25	; 0x06
 826:	93 e0       	ldi	r25, 0x03	; 3
 828:	9f 83       	std	Y+7, r25	; 0x07
 82a:	88 87       	std	Y+8, r24	; 0x08
	u8 Loc_u8_val=0xff;	
	u8 Loc_u8_row=0;
	u8 Loc_u8_col=0;
	
	for(Loc_u8_col=0;Loc_u8_col<4;Loc_u8_col++)
 82c:	b1 2c       	mov	r11, r1
 82e:	3b c0       	rjmp	.+118    	; 0x8a6 <__stack+0x47>
	{
		/* ACTIVE COL(N) ---> LOW */
		DIO_Vid_Set_Pin_Val(KEYPAD_COL_PORT,Loc_u8_col_arr[Loc_u8_col],LOW);
 830:	cb 2c       	mov	r12, r11
 832:	d1 2c       	mov	r13, r1
 834:	e1 e0       	ldi	r30, 0x01	; 1
 836:	f0 e0       	ldi	r31, 0x00	; 0
 838:	ec 0f       	add	r30, r28
 83a:	fd 1f       	adc	r31, r29
 83c:	ec 0d       	add	r30, r12
 83e:	fd 1d       	adc	r31, r13
 840:	a0 80       	ld	r10, Z
 842:	40 e0       	ldi	r20, 0x00	; 0
 844:	6a 2d       	mov	r22, r10
 846:	81 e0       	ldi	r24, 0x01	; 1
 848:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
		
		/* CHECK IF ANY BUTTON IS PRESSED */
		
		for(Loc_u8_row=0;Loc_u8_row<4;Loc_u8_row++)
 84c:	10 e0       	ldi	r17, 0x00	; 0
 84e:	23 c0       	rjmp	.+70     	; 0x896 <__stack+0x37>
		{
				if(DIO_u8_Get_Pin_Val(KEYPAD_ROW_PORT,Loc_u8_row_arr[Loc_u8_row])==0)
 850:	e1 2e       	mov	r14, r17
 852:	f1 2c       	mov	r15, r1
 854:	e5 e0       	ldi	r30, 0x05	; 5
 856:	f0 e0       	ldi	r31, 0x00	; 0
 858:	ec 0f       	add	r30, r28
 85a:	fd 1f       	adc	r31, r29
 85c:	ee 0d       	add	r30, r14
 85e:	ff 1d       	adc	r31, r15
 860:	00 81       	ld	r16, Z
 862:	60 2f       	mov	r22, r16
 864:	80 e0       	ldi	r24, 0x00	; 0
 866:	0e 94 d7 06 	call	0xdae	; 0xdae <DIO_u8_Get_Pin_Val>
 86a:	81 11       	cpse	r24, r1
 86c:	13 c0       	rjmp	.+38     	; 0x894 <__stack+0x35>
				{
							/* GET VALUE */
						Loc_u8_val=KEYPAD_Data[Loc_u8_row][Loc_u8_col];
 86e:	c7 01       	movw	r24, r14
 870:	88 0f       	add	r24, r24
 872:	99 1f       	adc	r25, r25
 874:	88 0f       	add	r24, r24
 876:	99 1f       	adc	r25, r25
 878:	8d 59       	subi	r24, 0x9D	; 157
 87a:	9f 4f       	sbci	r25, 0xFF	; 255
 87c:	fc 01       	movw	r30, r24
 87e:	ec 0d       	add	r30, r12
 880:	fd 1d       	adc	r31, r13
 882:	10 81       	ld	r17, Z
							/* BUSY WAIT */
						while (DIO_u8_Get_Pin_Val(KEYPAD_ROW_PORT,Loc_u8_row_arr[Loc_u8_row])==0);
 884:	60 2f       	mov	r22, r16
 886:	80 e0       	ldi	r24, 0x00	; 0
 888:	0e 94 d7 06 	call	0xdae	; 0xdae <DIO_u8_Get_Pin_Val>
 88c:	88 23       	and	r24, r24
 88e:	d1 f3       	breq	.-12     	; 0x884 <__stack+0x25>
						return Loc_u8_val;
 890:	81 2f       	mov	r24, r17
 892:	0d c0       	rjmp	.+26     	; 0x8ae <__stack+0x4f>
		/* ACTIVE COL(N) ---> LOW */
		DIO_Vid_Set_Pin_Val(KEYPAD_COL_PORT,Loc_u8_col_arr[Loc_u8_col],LOW);
		
		/* CHECK IF ANY BUTTON IS PRESSED */
		
		for(Loc_u8_row=0;Loc_u8_row<4;Loc_u8_row++)
 894:	1f 5f       	subi	r17, 0xFF	; 255
 896:	14 30       	cpi	r17, 0x04	; 4
 898:	d8 f2       	brcs	.-74     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
				}
				


		}
			DIO_Vid_Set_Pin_Val(KEYPAD_COL_PORT,Loc_u8_col_arr[Loc_u8_col],HIGH);
 89a:	41 e0       	ldi	r20, 0x01	; 1
 89c:	6a 2d       	mov	r22, r10
 89e:	81 e0       	ldi	r24, 0x01	; 1
 8a0:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
	u8 Loc_u8_row_arr[4]={KEYPAD_ROW4_PIN,KEYPAD_ROW5_PIN,KEYPAD_ROW6_PIN,KEYPAD_ROW7_PIN};
	u8 Loc_u8_val=0xff;	
	u8 Loc_u8_row=0;
	u8 Loc_u8_col=0;
	
	for(Loc_u8_col=0;Loc_u8_col<4;Loc_u8_col++)
 8a4:	b3 94       	inc	r11
 8a6:	83 e0       	ldi	r24, 0x03	; 3
 8a8:	8b 15       	cp	r24, r11
 8aa:	10 f6       	brcc	.-124    	; 0x830 <__DATA_REGION_LENGTH__+0x30>

		}
			DIO_Vid_Set_Pin_Val(KEYPAD_COL_PORT,Loc_u8_col_arr[Loc_u8_col],HIGH);
		
	}
	return Loc_u8_val;
 8ac:	8f ef       	ldi	r24, 0xFF	; 255
	
	
	
	
 8ae:	28 96       	adiw	r28, 0x08	; 8
 8b0:	0f b6       	in	r0, 0x3f	; 63
 8b2:	f8 94       	cli
 8b4:	de bf       	out	0x3e, r29	; 62
 8b6:	0f be       	out	0x3f, r0	; 63
 8b8:	cd bf       	out	0x3d, r28	; 61
 8ba:	df 91       	pop	r29
 8bc:	cf 91       	pop	r28
 8be:	1f 91       	pop	r17
 8c0:	0f 91       	pop	r16
 8c2:	ff 90       	pop	r15
 8c4:	ef 90       	pop	r14
 8c6:	df 90       	pop	r13
 8c8:	cf 90       	pop	r12
 8ca:	bf 90       	pop	r11
 8cc:	af 90       	pop	r10
 8ce:	08 95       	ret

Disassembly of section .text.SHDATA:

00000cec <SHDATA>:
 cec:	0f 93       	push	r16
 cee:	1f 93       	push	r17
 cf0:	cf 93       	push	r28
 cf2:	df 93       	push	r29
 cf4:	00 d0       	rcall	.+0      	; 0xcf6 <SHDATA+0xa>
 cf6:	00 d0       	rcall	.+0      	; 0xcf8 <SHDATA+0xc>
 cf8:	cd b7       	in	r28, 0x3d	; 61
 cfa:	de b7       	in	r29, 0x3e	; 62
 cfc:	08 2f       	mov	r16, r24
 cfe:	84 e0       	ldi	r24, 0x04	; 4
 d00:	89 83       	std	Y+1, r24	; 0x01
 d02:	85 e0       	ldi	r24, 0x05	; 5
 d04:	8a 83       	std	Y+2, r24	; 0x02
 d06:	86 e0       	ldi	r24, 0x06	; 6
 d08:	8b 83       	std	Y+3, r24	; 0x03
 d0a:	87 e0       	ldi	r24, 0x07	; 7
 d0c:	8c 83       	std	Y+4, r24	; 0x04
 d0e:	10 e0       	ldi	r17, 0x00	; 0
 d10:	14 c0       	rjmp	.+40     	; 0xd3a <SHDATA+0x4e>
 d12:	40 2f       	mov	r20, r16
 d14:	50 e0       	ldi	r21, 0x00	; 0
 d16:	01 2e       	mov	r0, r17
 d18:	02 c0       	rjmp	.+4      	; 0xd1e <SHDATA+0x32>
 d1a:	55 95       	asr	r21
 d1c:	47 95       	ror	r20
 d1e:	0a 94       	dec	r0
 d20:	e2 f7       	brpl	.-8      	; 0xd1a <SHDATA+0x2e>
 d22:	41 70       	andi	r20, 0x01	; 1
 d24:	e1 e0       	ldi	r30, 0x01	; 1
 d26:	f0 e0       	ldi	r31, 0x00	; 0
 d28:	ec 0f       	add	r30, r28
 d2a:	fd 1f       	adc	r31, r29
 d2c:	e1 0f       	add	r30, r17
 d2e:	f1 1d       	adc	r31, r1
 d30:	60 81       	ld	r22, Z
 d32:	80 e0       	ldi	r24, 0x00	; 0
 d34:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
 d38:	1f 5f       	subi	r17, 0xFF	; 255
 d3a:	14 30       	cpi	r17, 0x04	; 4
 d3c:	50 f3       	brcs	.-44     	; 0xd12 <SHDATA+0x26>
 d3e:	0f 90       	pop	r0
 d40:	0f 90       	pop	r0
 d42:	0f 90       	pop	r0
 d44:	0f 90       	pop	r0
 d46:	df 91       	pop	r29
 d48:	cf 91       	pop	r28
 d4a:	1f 91       	pop	r17
 d4c:	0f 91       	pop	r16
 d4e:	08 95       	ret

Disassembly of section .text.Send_Enable:

00001104 <Send_Enable>:
    1104:	41 e0       	ldi	r20, 0x01	; 1
    1106:	63 e0       	ldi	r22, 0x03	; 3
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    110e:	8f e3       	ldi	r24, 0x3F	; 63
    1110:	9f e1       	ldi	r25, 0x1F	; 31
    1112:	01 97       	sbiw	r24, 0x01	; 1
    1114:	f1 f7       	brne	.-4      	; 0x1112 <Send_Enable+0xe>
    1116:	00 c0       	rjmp	.+0      	; 0x1118 <Send_Enable+0x14>
    1118:	00 00       	nop
    111a:	40 e0       	ldi	r20, 0x00	; 0
    111c:	63 e0       	ldi	r22, 0x03	; 3
    111e:	81 e0       	ldi	r24, 0x01	; 1
    1120:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
    1124:	08 95       	ret

Disassembly of section .text.LCD_Vid_Send_Command:

00000fdc <LCD_Vid_Send_Command>:
     fdc:	cf 93       	push	r28
     fde:	c8 2f       	mov	r28, r24
     fe0:	40 e0       	ldi	r20, 0x00	; 0
     fe2:	61 e0       	ldi	r22, 0x01	; 1
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
     fea:	40 e0       	ldi	r20, 0x00	; 0
     fec:	62 e0       	ldi	r22, 0x02	; 2
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
     ff4:	8c 2f       	mov	r24, r28
     ff6:	82 95       	swap	r24
     ff8:	8f 70       	andi	r24, 0x0F	; 15
     ffa:	0e 94 76 06 	call	0xcec	; 0xcec <SHDATA>
     ffe:	0e 94 82 08 	call	0x1104	; 0x1104 <Send_Enable>
    1002:	8c 2f       	mov	r24, r28
    1004:	0e 94 76 06 	call	0xcec	; 0xcec <SHDATA>
    1008:	0e 94 82 08 	call	0x1104	; 0x1104 <Send_Enable>
    100c:	cf 91       	pop	r28
    100e:	08 95       	ret

Disassembly of section .text.LCD_Vid_Send_Data:

00001010 <LCD_Vid_Send_Data>:
    1010:	cf 93       	push	r28
    1012:	c8 2f       	mov	r28, r24
    1014:	41 e0       	ldi	r20, 0x01	; 1
    1016:	61 e0       	ldi	r22, 0x01	; 1
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
    101e:	40 e0       	ldi	r20, 0x00	; 0
    1020:	62 e0       	ldi	r22, 0x02	; 2
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
    1028:	8c 2f       	mov	r24, r28
    102a:	82 95       	swap	r24
    102c:	8f 70       	andi	r24, 0x0F	; 15
    102e:	0e 94 76 06 	call	0xcec	; 0xcec <SHDATA>
    1032:	0e 94 82 08 	call	0x1104	; 0x1104 <Send_Enable>
    1036:	8c 2f       	mov	r24, r28
    1038:	0e 94 76 06 	call	0xcec	; 0xcec <SHDATA>
    103c:	0e 94 82 08 	call	0x1104	; 0x1104 <Send_Enable>
    1040:	cf 91       	pop	r28
    1042:	08 95       	ret

Disassembly of section .text.LCD_Vid_Init:

00000f32 <LCD_Vid_Init>:
 f32:	2f ef       	ldi	r18, 0xFF	; 255
 f34:	83 ef       	ldi	r24, 0xF3	; 243
 f36:	91 e0       	ldi	r25, 0x01	; 1
 f38:	21 50       	subi	r18, 0x01	; 1
 f3a:	80 40       	sbci	r24, 0x00	; 0
 f3c:	90 40       	sbci	r25, 0x00	; 0
 f3e:	e1 f7       	brne	.-8      	; 0xf38 <LCD_Vid_Init+0x6>
 f40:	00 c0       	rjmp	.+0      	; 0xf42 <LCD_Vid_Init+0x10>
 f42:	00 00       	nop
 f44:	82 e0       	ldi	r24, 0x02	; 2
 f46:	0e 94 76 06 	call	0xcec	; 0xcec <SHDATA>
 f4a:	0e 94 82 08 	call	0x1104	; 0x1104 <Send_Enable>
 f4e:	82 e0       	ldi	r24, 0x02	; 2
 f50:	0e 94 76 06 	call	0xcec	; 0xcec <SHDATA>
 f54:	0e 94 82 08 	call	0x1104	; 0x1104 <Send_Enable>
 f58:	88 e0       	ldi	r24, 0x08	; 8
 f5a:	0e 94 76 06 	call	0xcec	; 0xcec <SHDATA>
 f5e:	0e 94 82 08 	call	0x1104	; 0x1104 <Send_Enable>
 f62:	8c e0       	ldi	r24, 0x0C	; 12
 f64:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
 f68:	81 e0       	ldi	r24, 0x01	; 1
 f6a:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
 f6e:	08 95       	ret

Disassembly of section .text.LCD_Vid_Send_String:

00000f70 <LCD_Vid_Send_String>:
 f70:	cf 92       	push	r12
 f72:	df 92       	push	r13
 f74:	ef 92       	push	r14
 f76:	cf 93       	push	r28
 f78:	6b 01       	movw	r12, r22
 f7a:	e8 2e       	mov	r14, r24
 f7c:	c0 e0       	ldi	r28, 0x00	; 0
 f7e:	03 c0       	rjmp	.+6      	; 0xf86 <LCD_Vid_Send_String+0x16>
 f80:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
 f84:	cf 5f       	subi	r28, 0xFF	; 255
 f86:	ae 2d       	mov	r26, r14
 f88:	c6 01       	movw	r24, r12
 f8a:	8c 0f       	add	r24, r28
 f8c:	91 1d       	adc	r25, r1
 f8e:	a1 1d       	adc	r26, r1
 f90:	fc 01       	movw	r30, r24
 f92:	84 91       	lpm	r24, Z
 f94:	a7 fd       	sbrc	r26, 7
 f96:	80 81       	ld	r24, Z
 f98:	81 11       	cpse	r24, r1
 f9a:	f2 cf       	rjmp	.-28     	; 0xf80 <LCD_Vid_Send_String+0x10>
 f9c:	cf 91       	pop	r28
 f9e:	ef 90       	pop	r14
 fa0:	df 90       	pop	r13
 fa2:	cf 90       	pop	r12
 fa4:	08 95       	ret

Disassembly of section .text.LCD_Vid_Send_Number:

000006f2 <LCD_Vid_Send_Number>:
 6f2:	cf 92       	push	r12
 6f4:	df 92       	push	r13
 6f6:	ff 92       	push	r15
 6f8:	0f 93       	push	r16
 6fa:	1f 93       	push	r17
 6fc:	cf 93       	push	r28
 6fe:	df 93       	push	r29
 700:	cd b7       	in	r28, 0x3d	; 61
 702:	de b7       	in	r29, 0x3e	; 62
 704:	2a 97       	sbiw	r28, 0x0a	; 10
 706:	0f b6       	in	r0, 0x3f	; 63
 708:	f8 94       	cli
 70a:	de bf       	out	0x3e, r29	; 62
 70c:	0f be       	out	0x3f, r0	; 63
 70e:	cd bf       	out	0x3d, r28	; 61
 710:	8c 01       	movw	r16, r24
 712:	99 23       	and	r25, r25
 714:	5c f1       	brlt	.+86     	; 0x76c <LCD_Vid_Send_Number+0x7a>
 716:	f1 2c       	mov	r15, r1
 718:	01 c0       	rjmp	.+2      	; 0x71c <LCD_Vid_Send_Number+0x2a>
 71a:	f8 2e       	mov	r15, r24
 71c:	cf 2c       	mov	r12, r15
 71e:	d1 2c       	mov	r13, r1
 720:	c8 01       	movw	r24, r16
 722:	6a e0       	ldi	r22, 0x0A	; 10
 724:	70 e0       	ldi	r23, 0x00	; 0
 726:	0e 94 36 08 	call	0x106c	; 0x106c <__divmodhi4>
 72a:	e1 e0       	ldi	r30, 0x01	; 1
 72c:	f0 e0       	ldi	r31, 0x00	; 0
 72e:	ec 0f       	add	r30, r28
 730:	fd 1f       	adc	r31, r29
 732:	ec 0d       	add	r30, r12
 734:	fd 1d       	adc	r31, r13
 736:	80 83       	st	Z, r24
 738:	06 2f       	mov	r16, r22
 73a:	17 2f       	mov	r17, r23
 73c:	81 e0       	ldi	r24, 0x01	; 1
 73e:	8f 0d       	add	r24, r15
 740:	10 16       	cp	r1, r16
 742:	11 06       	cpc	r1, r17
 744:	54 f3       	brlt	.-44     	; 0x71a <LCD_Vid_Send_Number+0x28>
 746:	10 e0       	ldi	r17, 0x00	; 0
 748:	0e c0       	rjmp	.+28     	; 0x766 <LCD_Vid_Send_Number+0x74>
 74a:	f6 01       	movw	r30, r12
 74c:	e1 1b       	sub	r30, r17
 74e:	f1 09       	sbc	r31, r1
 750:	81 e0       	ldi	r24, 0x01	; 1
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	8c 0f       	add	r24, r28
 756:	9d 1f       	adc	r25, r29
 758:	e8 0f       	add	r30, r24
 75a:	f9 1f       	adc	r31, r25
 75c:	80 81       	ld	r24, Z
 75e:	80 5d       	subi	r24, 0xD0	; 208
 760:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
 764:	1f 5f       	subi	r17, 0xFF	; 255
 766:	f1 16       	cp	r15, r17
 768:	80 f7       	brcc	.-32     	; 0x74a <LCD_Vid_Send_Number+0x58>
 76a:	32 c0       	rjmp	.+100    	; 0x7d0 <LCD_Vid_Send_Number+0xde>
 76c:	99 23       	and	r25, r25
 76e:	84 f5       	brge	.+96     	; 0x7d0 <LCD_Vid_Send_Number+0xde>
 770:	8d e2       	ldi	r24, 0x2D	; 45
 772:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
 776:	88 27       	eor	r24, r24
 778:	99 27       	eor	r25, r25
 77a:	80 1b       	sub	r24, r16
 77c:	91 0b       	sbc	r25, r17
 77e:	10 e0       	ldi	r17, 0x00	; 0
 780:	01 c0       	rjmp	.+2      	; 0x784 <LCD_Vid_Send_Number+0x92>
 782:	12 2f       	mov	r17, r18
 784:	c1 2e       	mov	r12, r17
 786:	d1 2c       	mov	r13, r1
 788:	6a e0       	ldi	r22, 0x0A	; 10
 78a:	70 e0       	ldi	r23, 0x00	; 0
 78c:	0e 94 36 08 	call	0x106c	; 0x106c <__divmodhi4>
 790:	e1 e0       	ldi	r30, 0x01	; 1
 792:	f0 e0       	ldi	r31, 0x00	; 0
 794:	ec 0f       	add	r30, r28
 796:	fd 1f       	adc	r31, r29
 798:	ec 0d       	add	r30, r12
 79a:	fd 1d       	adc	r31, r13
 79c:	80 83       	st	Z, r24
 79e:	86 2f       	mov	r24, r22
 7a0:	97 2f       	mov	r25, r23
 7a2:	21 e0       	ldi	r18, 0x01	; 1
 7a4:	21 0f       	add	r18, r17
 7a6:	18 16       	cp	r1, r24
 7a8:	19 06       	cpc	r1, r25
 7aa:	5c f3       	brlt	.-42     	; 0x782 <LCD_Vid_Send_Number+0x90>
 7ac:	00 e0       	ldi	r16, 0x00	; 0
 7ae:	0e c0       	rjmp	.+28     	; 0x7cc <LCD_Vid_Send_Number+0xda>
 7b0:	f6 01       	movw	r30, r12
 7b2:	e0 1b       	sub	r30, r16
 7b4:	f1 09       	sbc	r31, r1
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	8c 0f       	add	r24, r28
 7bc:	9d 1f       	adc	r25, r29
 7be:	e8 0f       	add	r30, r24
 7c0:	f9 1f       	adc	r31, r25
 7c2:	80 81       	ld	r24, Z
 7c4:	80 5d       	subi	r24, 0xD0	; 208
 7c6:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
 7ca:	0f 5f       	subi	r16, 0xFF	; 255
 7cc:	10 17       	cp	r17, r16
 7ce:	80 f7       	brcc	.-32     	; 0x7b0 <LCD_Vid_Send_Number+0xbe>
 7d0:	2a 96       	adiw	r28, 0x0a	; 10
 7d2:	0f b6       	in	r0, 0x3f	; 63
 7d4:	f8 94       	cli
 7d6:	de bf       	out	0x3e, r29	; 62
 7d8:	0f be       	out	0x3f, r0	; 63
 7da:	cd bf       	out	0x3d, r28	; 61
 7dc:	df 91       	pop	r29
 7de:	cf 91       	pop	r28
 7e0:	1f 91       	pop	r17
 7e2:	0f 91       	pop	r16
 7e4:	ff 90       	pop	r15
 7e6:	df 90       	pop	r13
 7e8:	cf 90       	pop	r12
 7ea:	08 95       	ret

Disassembly of section .text.LCD_Vid_GotoXY:

000011d6 <LCD_Vid_GotoXY>:
    11d6:	66 23       	and	r22, r22
    11d8:	29 f0       	breq	.+10     	; 0x11e4 <LCD_Vid_GotoXY+0xe>
    11da:	61 30       	cpi	r22, 0x01	; 1
    11dc:	11 f4       	brne	.+4      	; 0x11e2 <LCD_Vid_GotoXY+0xc>
    11de:	80 5c       	subi	r24, 0xC0	; 192
    11e0:	01 c0       	rjmp	.+2      	; 0x11e4 <LCD_Vid_GotoXY+0xe>
    11e2:	80 e0       	ldi	r24, 0x00	; 0
    11e4:	80 68       	ori	r24, 0x80	; 128
    11e6:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
    11ea:	08 95       	ret

Disassembly of section .text.password:

0000018a <password>:
#define F_CPU 16000000
#include <util/delay.h>

u8 val;
void password()
{
 18a:	0f 93       	push	r16
 18c:	1f 93       	push	r17
 18e:	cf 93       	push	r28
 190:	df 93       	push	r29
 192:	cd b7       	in	r28, 0x3d	; 61
 194:	de b7       	in	r29, 0x3e	; 62
 196:	28 97       	sbiw	r28, 0x08	; 8
 198:	0f b6       	in	r0, 0x3f	; 63
 19a:	f8 94       	cli
 19c:	de bf       	out	0x3e, r29	; 62
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	cd bf       	out	0x3d, r28	; 61
	KEYPAD_Vid_Init();
 1a2:	0e 94 b4 05 	call	0xb68	; 0xb68 <KEYPAD_Vid_Init>
	u8 Loc_u8_val;
	u8 password[4], check[4];
	u8 i=0, j=0,x=0;
	BOOL test = 1;

	LCD_Vid_Send_String("Create Password:");
 1a6:	6a eb       	ldi	r22, 0xBA	; 186
 1a8:	70 e0       	ldi	r23, 0x00	; 0
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
	LCD_Vid_GotoXY(COL1,ROW2);
 1b0:	61 e0       	ldi	r22, 0x01	; 1
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
void password()
{
	KEYPAD_Vid_Init();
	u8 Loc_u8_val;
	u8 password[4], check[4];
	u8 i=0, j=0,x=0;
 1b8:	10 e0       	ldi	r17, 0x00	; 0
	BOOL test = 1;

	LCD_Vid_Send_String("Create Password:");
	LCD_Vid_GotoXY(COL1,ROW2);
	
	while(i<4){
 1ba:	23 c0       	rjmp	.+70     	; 0x202 <password+0x78>
		Loc_u8_val = KEYPAD_u8_Get_Key();
 1bc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <KEYPAD_u8_Get_Key>
		if((Loc_u8_val >= '0') && (Loc_u8_val <= '9')){
 1c0:	90 ed       	ldi	r25, 0xD0	; 208
 1c2:	98 0f       	add	r25, r24
 1c4:	9a 30       	cpi	r25, 0x0A	; 10
 1c6:	e8 f4       	brcc	.+58     	; 0x202 <password+0x78>
			password[i] = Loc_u8_val;
 1c8:	e1 e0       	ldi	r30, 0x01	; 1
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	ec 0f       	add	r30, r28
 1ce:	fd 1f       	adc	r31, r29
 1d0:	e1 0f       	add	r30, r17
 1d2:	f1 1d       	adc	r31, r1
 1d4:	80 83       	st	Z, r24
			LCD_Vid_Send_Number(password[i]);
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <LCD_Vid_Send_Number>
 1dc:	2f ef       	ldi	r18, 0xFF	; 255
 1de:	81 ee       	ldi	r24, 0xE1	; 225
 1e0:	94 e0       	ldi	r25, 0x04	; 4
 1e2:	21 50       	subi	r18, 0x01	; 1
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	90 40       	sbci	r25, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <password+0x58>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <password+0x62>
 1ec:	00 00       	nop
			_delay_ms(100);
			LCD_Vid_GotoXY(i,ROW2);
 1ee:	61 e0       	ldi	r22, 0x01	; 1
 1f0:	81 2f       	mov	r24, r17
 1f2:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
			LCD_Vid_Send_String("*");
 1f6:	6b ec       	ldi	r22, 0xCB	; 203
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
			i++;
 200:	1f 5f       	subi	r17, 0xFF	; 255
	BOOL test = 1;

	LCD_Vid_Send_String("Create Password:");
	LCD_Vid_GotoXY(COL1,ROW2);
	
	while(i<4){
 202:	14 30       	cpi	r17, 0x04	; 4
 204:	d8 f2       	brcs	.-74     	; 0x1bc <password+0x32>
 206:	2f ef       	ldi	r18, 0xFF	; 255
 208:	83 ec       	ldi	r24, 0xC3	; 195
 20a:	99 e0       	ldi	r25, 0x09	; 9
 20c:	21 50       	subi	r18, 0x01	; 1
 20e:	80 40       	sbci	r24, 0x00	; 0
 210:	90 40       	sbci	r25, 0x00	; 0
 212:	e1 f7       	brne	.-8      	; 0x20c <password+0x82>
 214:	00 c0       	rjmp	.+0      	; 0x216 <password+0x8c>
 216:	00 00       	nop
			i++;
		}
	}
	
	_delay_ms(200);
	LCD_Vid_Send_Command(LCD_CLR);
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
	LCD_Vid_Send_String("Enter Password:");
 21e:	6d ec       	ldi	r22, 0xCD	; 205
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
	LCD_Vid_GotoXY(COL1,ROW2);
 228:	61 e0       	ldi	r22, 0x01	; 1
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
void password()
{
	KEYPAD_Vid_Init();
	u8 Loc_u8_val;
	u8 password[4], check[4];
	u8 i=0, j=0,x=0;
 230:	10 e0       	ldi	r17, 0x00	; 0
	
	_delay_ms(200);
	LCD_Vid_Send_Command(LCD_CLR);
	LCD_Vid_Send_String("Enter Password:");
	LCD_Vid_GotoXY(COL1,ROW2);
	i = 0;
 232:	00 e0       	ldi	r16, 0x00	; 0
 234:	25 c0       	rjmp	.+74     	; 0x280 <password+0xf6>
	z : while (i<4){
		
		Loc_u8_val = KEYPAD_u8_Get_Key();
 236:	0e 94 f6 03 	call	0x7ec	; 0x7ec <KEYPAD_u8_Get_Key>
		if((Loc_u8_val >= '0') && (Loc_u8_val <= '9')){
 23a:	90 ed       	ldi	r25, 0xD0	; 208
 23c:	98 0f       	add	r25, r24
 23e:	9a 30       	cpi	r25, 0x0A	; 10
 240:	f8 f4       	brcc	.+62     	; 0x280 <password+0xf6>
			check[i] = Loc_u8_val;
 242:	e5 e0       	ldi	r30, 0x05	; 5
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	ec 0f       	add	r30, r28
 248:	fd 1f       	adc	r31, r29
 24a:	e0 0f       	add	r30, r16
 24c:	f1 1d       	adc	r31, r1
 24e:	80 83       	st	Z, r24
			LCD_Vid_Send_Number(check[i]);
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 79 03 	call	0x6f2	; 0x6f2 <LCD_Vid_Send_Number>
 256:	2f ef       	ldi	r18, 0xFF	; 255
 258:	81 ee       	ldi	r24, 0xE1	; 225
 25a:	94 e0       	ldi	r25, 0x04	; 4
 25c:	21 50       	subi	r18, 0x01	; 1
 25e:	80 40       	sbci	r24, 0x00	; 0
 260:	90 40       	sbci	r25, 0x00	; 0
 262:	e1 f7       	brne	.-8      	; 0x25c <password+0xd2>
 264:	00 c0       	rjmp	.+0      	; 0x266 <password+0xdc>
 266:	00 00       	nop
			_delay_ms(100);
			LCD_Vid_GotoXY(i,ROW2);
 268:	61 e0       	ldi	r22, 0x01	; 1
 26a:	80 2f       	mov	r24, r16
 26c:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
			LCD_Vid_Send_String("*");
 270:	6b ec       	ldi	r22, 0xCB	; 203
 272:	70 e0       	ldi	r23, 0x00	; 0
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
			i++;
 27a:	0f 5f       	subi	r16, 0xFF	; 255
 27c:	01 c0       	rjmp	.+2      	; 0x280 <password+0xf6>
			_delay_ms(150);
			LCD_Vid_Send_Command(LCD_CLR);
			LCD_Vid_Send_String("Enter Again:");
			LCD_Vid_GotoXY(COL1,ROW2);
			test = 1;
			i = 0;
 27e:	00 e0       	ldi	r16, 0x00	; 0
	_delay_ms(200);
	LCD_Vid_Send_Command(LCD_CLR);
	LCD_Vid_Send_String("Enter Password:");
	LCD_Vid_GotoXY(COL1,ROW2);
	i = 0;
	z : while (i<4){
 280:	04 30       	cpi	r16, 0x04	; 4
 282:	c8 f2       	brcs	.-78     	; 0x236 <password+0xac>
 284:	41 e0       	ldi	r20, 0x01	; 1
 286:	6f c0       	rjmp	.+222    	; 0x366 <password+0x1dc>
 288:	2f ef       	ldi	r18, 0xFF	; 255
 28a:	82 e5       	ldi	r24, 0x52	; 82
 28c:	97 e0       	ldi	r25, 0x07	; 7
 28e:	21 50       	subi	r18, 0x01	; 1
 290:	80 40       	sbci	r24, 0x00	; 0
 292:	90 40       	sbci	r25, 0x00	; 0
 294:	e1 f7       	brne	.-8      	; 0x28e <password+0x104>
 296:	00 c0       	rjmp	.+0      	; 0x298 <password+0x10e>
 298:	00 00       	nop
			i++;
		}
	}
	while(x<3){
		_delay_ms(150);
		for(j=0 ; j<4 ; j++){
 29a:	20 e0       	ldi	r18, 0x00	; 0
 29c:	13 c0       	rjmp	.+38     	; 0x2c4 <password+0x13a>
			if(check[j] != password[j]){
 29e:	82 2f       	mov	r24, r18
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	e5 e0       	ldi	r30, 0x05	; 5
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	ec 0f       	add	r30, r28
 2a8:	fd 1f       	adc	r31, r29
 2aa:	e8 0f       	add	r30, r24
 2ac:	f9 1f       	adc	r31, r25
 2ae:	30 81       	ld	r19, Z
 2b0:	e1 e0       	ldi	r30, 0x01	; 1
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	ec 0f       	add	r30, r28
 2b6:	fd 1f       	adc	r31, r29
 2b8:	e8 0f       	add	r30, r24
 2ba:	f9 1f       	adc	r31, r25
 2bc:	80 81       	ld	r24, Z
 2be:	38 13       	cpse	r19, r24
				test = 0;
 2c0:	40 e0       	ldi	r20, 0x00	; 0
			i++;
		}
	}
	while(x<3){
		_delay_ms(150);
		for(j=0 ; j<4 ; j++){
 2c2:	2f 5f       	subi	r18, 0xFF	; 255
 2c4:	24 30       	cpi	r18, 0x04	; 4
 2c6:	58 f3       	brcs	.-42     	; 0x29e <password+0x114>
			if(check[j] != password[j]){
				test = 0;
			}
		}
		if(test == 1){
 2c8:	41 30       	cpi	r20, 0x01	; 1
 2ca:	09 f5       	brne	.+66     	; 0x30e <password+0x184>
			u32 i = 0;
			DIO_Vid_Set_Pin_Dir(PORTD,PIN5,OUTPUT);	//OCRA1
 2cc:	65 e0       	ldi	r22, 0x05	; 5
 2ce:	83 e0       	ldi	r24, 0x03	; 3
 2d0:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
			Tim1_Vid_Fast_Pwm_ICR1_Init();
 2d4:	0e 94 79 07 	call	0xef2	; 0xef2 <Tim1_Vid_Fast_Pwm_ICR1_Init>
			
			for (i = 0; i <= 1000;i++)
 2d8:	00 e0       	ldi	r16, 0x00	; 0
 2da:	10 e0       	ldi	r17, 0x00	; 0
 2dc:	0b c0       	rjmp	.+22     	; 0x2f4 <password+0x16a>
			{
				Tim1_Vid_Set_Compare_Val(i);
 2de:	c8 01       	movw	r24, r16
 2e0:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Tim1_Vid_Set_Compare_Val>
 2e4:	8f e9       	ldi	r24, 0x9F	; 159
 2e6:	9f e0       	ldi	r25, 0x0F	; 15
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <password+0x15e>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <password+0x164>
 2ee:	00 00       	nop
		if(test == 1){
			u32 i = 0;
			DIO_Vid_Set_Pin_Dir(PORTD,PIN5,OUTPUT);	//OCRA1
			Tim1_Vid_Fast_Pwm_ICR1_Init();
			
			for (i = 0; i <= 1000;i++)
 2f0:	0f 5f       	subi	r16, 0xFF	; 255
 2f2:	1f 4f       	sbci	r17, 0xFF	; 255
 2f4:	09 3e       	cpi	r16, 0xE9	; 233
 2f6:	93 e0       	ldi	r25, 0x03	; 3
 2f8:	19 07       	cpc	r17, r25
 2fa:	88 f3       	brcs	.-30     	; 0x2de <password+0x154>
			{
				Tim1_Vid_Set_Compare_Val(i);
				_delay_ms(1);
			}
			
			LCD_Vid_Send_Command(LCD_CLR);
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			LCD_Vid_Send_String("WELCOME :)");
 302:	6d ed       	ldi	r22, 0xDD	; 221
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
			break;
 30c:	2f c0       	rjmp	.+94     	; 0x36c <password+0x1e2>
		}
		if(test == 0){
 30e:	41 11       	cpse	r20, r1
 310:	2a c0       	rjmp	.+84     	; 0x366 <password+0x1dc>
			LCD_Vid_Send_Command(LCD_CLR);
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			LCD_Vid_Send_String("Invalid Password");
 318:	68 ee       	ldi	r22, 0xE8	; 232
 31a:	70 e0       	ldi	r23, 0x00	; 0
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 322:	2f ef       	ldi	r18, 0xFF	; 255
 324:	82 e5       	ldi	r24, 0x52	; 82
 326:	97 e0       	ldi	r25, 0x07	; 7
 328:	21 50       	subi	r18, 0x01	; 1
 32a:	80 40       	sbci	r24, 0x00	; 0
 32c:	90 40       	sbci	r25, 0x00	; 0
 32e:	e1 f7       	brne	.-8      	; 0x328 <password+0x19e>
 330:	00 c0       	rjmp	.+0      	; 0x332 <password+0x1a8>
 332:	00 00       	nop
			_delay_ms(150);
			LCD_Vid_Send_Command(LCD_CLR);
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			LCD_Vid_Send_String("Enter Again:");
 33a:	69 ef       	ldi	r22, 0xF9	; 249
 33c:	70 e0       	ldi	r23, 0x00	; 0
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
			LCD_Vid_GotoXY(COL1,ROW2);
 344:	61 e0       	ldi	r22, 0x01	; 1
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
			test = 1;
			i = 0;
			j = 0;
			x++;
 34c:	1f 5f       	subi	r17, 0xFF	; 255
			if(x==2){
 34e:	12 30       	cpi	r17, 0x02	; 2
 350:	09 f0       	breq	.+2      	; 0x354 <password+0x1ca>
 352:	95 cf       	rjmp	.-214    	; 0x27e <password+0xf4>
				LCD_Vid_Send_Command(LCD_CLR);
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
				LCD_Vid_Send_String("ALERT!!!");
 35a:	66 e0       	ldi	r22, 0x06	; 6
 35c:	71 e0       	ldi	r23, 0x01	; 1
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
				break;
 364:	03 c0       	rjmp	.+6      	; 0x36c <password+0x1e2>
			LCD_Vid_GotoXY(i,ROW2);
			LCD_Vid_Send_String("*");
			i++;
		}
	}
	while(x<3){
 366:	13 30       	cpi	r17, 0x03	; 3
 368:	08 f4       	brcc	.+2      	; 0x36c <password+0x1e2>
 36a:	8e cf       	rjmp	.-228    	; 0x288 <password+0xfe>
			}
			else
			goto z;
		}
	}
}
 36c:	28 96       	adiw	r28, 0x08	; 8
 36e:	0f b6       	in	r0, 0x3f	; 63
 370:	f8 94       	cli
 372:	de bf       	out	0x3e, r29	; 62
 374:	0f be       	out	0x3f, r0	; 63
 376:	cd bf       	out	0x3d, r28	; 61
 378:	df 91       	pop	r29
 37a:	cf 91       	pop	r28
 37c:	1f 91       	pop	r17
 37e:	0f 91       	pop	r16
 380:	08 95       	ret

Disassembly of section .text.calculator:

000005ec <calculator>:
void calculator()
{
	KEYPAD_Vid_Init();
 5ec:	0e 94 b4 05 	call	0xb68	; 0xb68 <KEYPAD_Vid_Init>
	u8 flag = 0, op = 0;
	u8 key, first_num = 0, second_num = 0; s32 result = 0;
 5f0:	e1 2c       	mov	r14, r1
 5f2:	f1 2c       	mov	r15, r1
 5f4:	00 e0       	ldi	r16, 0x00	; 0
 5f6:	d1 2c       	mov	r13, r1
	}
}
void calculator()
{
	KEYPAD_Vid_Init();
	u8 flag = 0, op = 0;
 5f8:	d0 e0       	ldi	r29, 0x00	; 0
 5fa:	10 e0       	ldi	r17, 0x00	; 0
	u8 key, first_num = 0, second_num = 0; s32 result = 0;
	while(1)
	{

		key = KEYPAD_u8_Get_Key();
 5fc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <KEYPAD_u8_Get_Key>
 600:	c8 2f       	mov	r28, r24
		switch(key){
 602:	8f 32       	cpi	r24, 0x2F	; 47
 604:	39 f1       	breq	.+78     	; 0x654 <calculator+0x68>
 606:	40 f4       	brcc	.+16     	; 0x618 <calculator+0x2c>
 608:	8b 32       	cpi	r24, 0x2B	; 43
 60a:	a9 f0       	breq	.+42     	; 0x636 <calculator+0x4a>
 60c:	8d 32       	cpi	r24, 0x2D	; 45
 60e:	c1 f0       	breq	.+48     	; 0x640 <calculator+0x54>
 610:	8a 32       	cpi	r24, 0x2A	; 42
 612:	09 f0       	breq	.+2      	; 0x616 <calculator+0x2a>
 614:	53 c0       	rjmp	.+166    	; 0x6bc <calculator+0xd0>
 616:	19 c0       	rjmp	.+50     	; 0x64a <calculator+0x5e>
 618:	83 34       	cpi	r24, 0x43	; 67
 61a:	31 f0       	breq	.+12     	; 0x628 <calculator+0x3c>
 61c:	8f 3f       	cpi	r24, 0xFF	; 255
 61e:	71 f3       	breq	.-36     	; 0x5fc <calculator+0x10>
 620:	8d 33       	cpi	r24, 0x3D	; 61
 622:	09 f0       	breq	.+2      	; 0x626 <calculator+0x3a>
 624:	4b c0       	rjmp	.+150    	; 0x6bc <calculator+0xd0>
 626:	1b c0       	rjmp	.+54     	; 0x65e <calculator+0x72>
			case 0xff: break;
			case 'C': LCD_Vid_Send_Command(0x01); flag=0; first_num=0; second_num=0; break;
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
 62e:	00 e0       	ldi	r16, 0x00	; 0
 630:	d1 2c       	mov	r13, r1
 632:	10 e0       	ldi	r17, 0x00	; 0
 634:	e3 cf       	rjmp	.-58     	; 0x5fc <calculator+0x10>
			case '+': LCD_Vid_Send_Data(key); op=key; flag=1; break;
 636:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
 63a:	dc 2f       	mov	r29, r28
 63c:	11 e0       	ldi	r17, 0x01	; 1
 63e:	de cf       	rjmp	.-68     	; 0x5fc <calculator+0x10>
			case '-': LCD_Vid_Send_Data(key); op=key; flag=1; break;
 640:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
 644:	dc 2f       	mov	r29, r28
 646:	11 e0       	ldi	r17, 0x01	; 1
 648:	d9 cf       	rjmp	.-78     	; 0x5fc <calculator+0x10>
			case '*': LCD_Vid_Send_Data(key); op=key; flag=1; break;
 64a:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
 64e:	dc 2f       	mov	r29, r28
 650:	11 e0       	ldi	r17, 0x01	; 1
 652:	d4 cf       	rjmp	.-88     	; 0x5fc <calculator+0x10>
			case '/': LCD_Vid_Send_Data(key); op=key; flag=1; break;
 654:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
 658:	dc 2f       	mov	r29, r28
 65a:	11 e0       	ldi	r17, 0x01	; 1
 65c:	cf cf       	rjmp	.-98     	; 0x5fc <calculator+0x10>
			case '=':{
				LCD_Vid_Send_Data(key);
 65e:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
				switch(op){
 662:	db 32       	cpi	r29, 0x2B	; 43
 664:	49 f0       	breq	.+18     	; 0x678 <calculator+0x8c>
 666:	18 f4       	brcc	.+6      	; 0x66e <calculator+0x82>
 668:	da 32       	cpi	r29, 0x2A	; 42
 66a:	81 f0       	breq	.+32     	; 0x68c <calculator+0xa0>
 66c:	19 c0       	rjmp	.+50     	; 0x6a0 <calculator+0xb4>
 66e:	dd 32       	cpi	r29, 0x2D	; 45
 670:	41 f0       	breq	.+16     	; 0x682 <calculator+0x96>
 672:	df 32       	cpi	r29, 0x2F	; 47
 674:	79 f0       	breq	.+30     	; 0x694 <calculator+0xa8>
 676:	14 c0       	rjmp	.+40     	; 0x6a0 <calculator+0xb4>
					case '+': result = first_num + second_num; break;
 678:	e0 2e       	mov	r14, r16
 67a:	f1 2c       	mov	r15, r1
 67c:	ed 0c       	add	r14, r13
 67e:	f1 1c       	adc	r15, r1
 680:	0f c0       	rjmp	.+30     	; 0x6a0 <calculator+0xb4>
					case '-': result = first_num - second_num; break;
 682:	ed 2c       	mov	r14, r13
 684:	f1 2c       	mov	r15, r1
 686:	e0 1a       	sub	r14, r16
 688:	f1 08       	sbc	r15, r1
 68a:	0a c0       	rjmp	.+20     	; 0x6a0 <calculator+0xb4>
					case '*': result = first_num * second_num; break;
 68c:	d0 9e       	mul	r13, r16
 68e:	70 01       	movw	r14, r0
 690:	11 24       	eor	r1, r1
 692:	06 c0       	rjmp	.+12     	; 0x6a0 <calculator+0xb4>
					case '/': result = first_num / second_num; break;
 694:	8d 2d       	mov	r24, r13
 696:	60 2f       	mov	r22, r16
 698:	0e 94 df 08 	call	0x11be	; 0x11be <__udivmodqi4>
 69c:	e8 2e       	mov	r14, r24
 69e:	f1 2c       	mov	r15, r1
				}
				if(op == '/' && second_num == 0){
 6a0:	df 32       	cpi	r29, 0x2F	; 47
 6a2:	41 f4       	brne	.+16     	; 0x6b4 <calculator+0xc8>
 6a4:	01 11       	cpse	r16, r1
 6a6:	06 c0       	rjmp	.+12     	; 0x6b4 <calculator+0xc8>
					LCD_Vid_Send_String("Infinite!"); break;
 6a8:	6f e0       	ldi	r22, 0x0F	; 15
 6aa:	71 e0       	ldi	r23, 0x01	; 1
 6ac:	80 e0       	ldi	r24, 0x00	; 0
 6ae:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 6b2:	a4 cf       	rjmp	.-184    	; 0x5fc <calculator+0x10>
				}
				else{
					LCD_Vid_Send_Number(result); break;
 6b4:	c7 01       	movw	r24, r14
 6b6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <LCD_Vid_Send_Number>
 6ba:	a0 cf       	rjmp	.-192    	; 0x5fc <calculator+0x10>
				}
			}
			default:
			LCD_Vid_Send_Data(key);
 6bc:	8c 2f       	mov	r24, r28
 6be:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
			if(flag == 0)
 6c2:	11 11       	cpse	r17, r1
 6c4:	0d c0       	rjmp	.+26     	; 0x6e0 <calculator+0xf4>
			first_num = first_num*10 + key - 48;
 6c6:	8d 2d       	mov	r24, r13
 6c8:	88 0f       	add	r24, r24
 6ca:	d8 2e       	mov	r13, r24
 6cc:	dd 0c       	add	r13, r13
 6ce:	dd 0c       	add	r13, r13
 6d0:	8d 0d       	add	r24, r13
 6d2:	8c 0f       	add	r24, r28
 6d4:	0f 2e       	mov	r0, r31
 6d6:	f0 ed       	ldi	r31, 0xD0	; 208
 6d8:	df 2e       	mov	r13, r31
 6da:	f0 2d       	mov	r31, r0
 6dc:	d8 0e       	add	r13, r24
 6de:	8e cf       	rjmp	.-228    	; 0x5fc <calculator+0x10>
			else
			second_num = second_num*10 + key - 48;
 6e0:	00 0f       	add	r16, r16
 6e2:	80 2f       	mov	r24, r16
 6e4:	88 0f       	add	r24, r24
 6e6:	88 0f       	add	r24, r24
 6e8:	08 0f       	add	r16, r24
 6ea:	c0 0f       	add	r28, r16
 6ec:	00 ed       	ldi	r16, 0xD0	; 208
 6ee:	0c 0f       	add	r16, r28
 6f0:	85 cf       	rjmp	.-246    	; 0x5fc <calculator+0x10>

Disassembly of section .text.parkingSensor:

00000c84 <parkingSensor>:
	}
}

void parkingSensor()
{
	GIE_Vid_Interrupt_Enable();
 c84:	0e 94 47 09 	call	0x128e	; 0x128e <GIE_Vid_Interrupt_Enable>
	ULTRASONIC_Vid_Init();
 c88:	0e 94 b4 08 	call	0x1168	; 0x1168 <ULTRASONIC_Vid_Init>
	TIMER0_Vid_Init(OV_MODE);
 c8c:	82 e0       	ldi	r24, 0x02	; 2
 c8e:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <TIMER0_Vid_Init>
	buzzer_vid_init();
 c92:	0e 94 2b 09 	call	0x1256	; 0x1256 <buzzer_vid_init>
	LCD_Vid_Send_String("Distance = ");
 c96:	69 e1       	ldi	r22, 0x19	; 25
 c98:	71 e0       	ldi	r23, 0x01	; 1
 c9a:	80 e0       	ldi	r24, 0x00	; 0
 c9c:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 ca0:	8f e3       	ldi	r24, 0x3F	; 63
 ca2:	9c e9       	ldi	r25, 0x9C	; 156
 ca4:	01 97       	sbiw	r24, 0x01	; 1
 ca6:	f1 f7       	brne	.-4      	; 0xca4 <parkingSensor+0x20>
 ca8:	00 c0       	rjmp	.+0      	; 0xcaa <parkingSensor+0x26>
 caa:	00 00       	nop
	_delay_ms(10);
	
	while(1)
	{
		ULTRASONIC_Vid_Trig();
 cac:	0e 94 22 08 	call	0x1044	; 0x1044 <ULTRASONIC_Vid_Trig>
 cb0:	9f ef       	ldi	r25, 0xFF	; 255
 cb2:	21 ee       	ldi	r18, 0xE1	; 225
 cb4:	84 e0       	ldi	r24, 0x04	; 4
 cb6:	91 50       	subi	r25, 0x01	; 1
 cb8:	20 40       	sbci	r18, 0x00	; 0
 cba:	80 40       	sbci	r24, 0x00	; 0
 cbc:	e1 f7       	brne	.-8      	; 0xcb6 <parkingSensor+0x32>
 cbe:	00 c0       	rjmp	.+0      	; 0xcc0 <parkingSensor+0x3c>
 cc0:	00 00       	nop
		_delay_ms(100);
		LCD_Vid_GotoXY(COL2,ROW2);
 cc2:	61 e0       	ldi	r22, 0x01	; 1
 cc4:	81 e0       	ldi	r24, 0x01	; 1
 cc6:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
		LCD_Vid_Send_Data(' ');
 cca:	80 e2       	ldi	r24, 0x20	; 32
 ccc:	0e 94 08 08 	call	0x1010	; 0x1010 <LCD_Vid_Send_Data>
		LCD_Vid_GotoXY(COL3,ROW2);
 cd0:	61 e0       	ldi	r22, 0x01	; 1
 cd2:	82 e0       	ldi	r24, 0x02	; 2
 cd4:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
		LCD_Vid_Send_String(" cm");
 cd8:	65 e2       	ldi	r22, 0x25	; 37
 cda:	71 e0       	ldi	r23, 0x01	; 1
 cdc:	80 e0       	ldi	r24, 0x00	; 0
 cde:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
		if(val != '1')
 ce2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 ce6:	81 33       	cpi	r24, 0x31	; 49
 ce8:	09 f3       	breq	.-62     	; 0xcac <parkingSensor+0x28>
		{
			break;
		}
	}
}
 cea:	08 95       	ret

Disassembly of section .text.tempSensor:

00000e0a <tempSensor>:
void tempSensor()
{
	u16 celsius;

	ADC_Vid_Init();         
 e0a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <ADC_Vid_Init>
	DIO_Vid_Set_Pin_Dir(PORTA,PIN0,INPUT); /* initialize ADC*/
 e0e:	40 e0       	ldi	r20, 0x00	; 0
 e10:	60 e0       	ldi	r22, 0x00	; 0
 e12:	80 e0       	ldi	r24, 0x00	; 0
 e14:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
	
	while(1)
	{
		LCD_Vid_GotoXY(0,0);
 e18:	60 e0       	ldi	r22, 0x00	; 0
 e1a:	80 e0       	ldi	r24, 0x00	; 0
 e1c:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
		LCD_Vid_Send_String("TEMP = ");
 e20:	69 e2       	ldi	r22, 0x29	; 41
 e22:	71 e0       	ldi	r23, 0x01	; 1
 e24:	80 e0       	ldi	r24, 0x00	; 0
 e26:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
		celsius = ADC_u16_Read(0);
 e2a:	80 e0       	ldi	r24, 0x00	; 0
 e2c:	0e 94 71 08 	call	0x10e2	; 0x10e2 <ADC_u16_Read>
		celsius *=0.488;
 e30:	bc 01       	movw	r22, r24
 e32:	80 e0       	ldi	r24, 0x00	; 0
 e34:	90 e0       	ldi	r25, 0x00	; 0
 e36:	0e 94 05 06 	call	0xc0a	; 0xc0a <__floatunsisf>
 e3a:	23 e2       	ldi	r18, 0x23	; 35
 e3c:	3b ed       	ldi	r19, 0xDB	; 219
 e3e:	49 ef       	ldi	r20, 0xF9	; 249
 e40:	5e e3       	ldi	r21, 0x3E	; 62
 e42:	0e 94 4f 09 	call	0x129e	; 0x129e <__mulsf3>
 e46:	0e 94 a8 06 	call	0xd50	; 0xd50 <__fixunssfsi>
		LCD_Vid_Send_Number(celsius);/* send string data for printing */
 e4a:	cb 01       	movw	r24, r22
 e4c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <LCD_Vid_Send_Number>
 e50:	2f ef       	ldi	r18, 0xFF	; 255
 e52:	83 ed       	ldi	r24, 0xD3	; 211
 e54:	90 e3       	ldi	r25, 0x30	; 48
 e56:	21 50       	subi	r18, 0x01	; 1
 e58:	80 40       	sbci	r24, 0x00	; 0
 e5a:	90 40       	sbci	r25, 0x00	; 0
 e5c:	e1 f7       	brne	.-8      	; 0xe56 <tempSensor+0x4c>
 e5e:	00 c0       	rjmp	.+0      	; 0xe60 <tempSensor+0x56>
 e60:	00 00       	nop
 e62:	da cf       	rjmp	.-76     	; 0xe18 <tempSensor+0xe>

Disassembly of section .text.main:

00000382 <main>:
	
}
int main(void)
{
	/* LCD */
	DIO_Vid_Set_Port_Dir(LCD_DPORT, 0xff);
 382:	6f ef       	ldi	r22, 0xFF	; 255
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_Vid_Set_Port_Dir>
	DIO_Vid_Set_Pin_Dir(LCD_CPORT, LCD_RS_PIN ,OUTPUT);
 38a:	41 e0       	ldi	r20, 0x01	; 1
 38c:	61 e0       	ldi	r22, 0x01	; 1
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(LCD_CPORT, LCD_RW_PIN ,OUTPUT);
 394:	41 e0       	ldi	r20, 0x01	; 1
 396:	62 e0       	ldi	r22, 0x02	; 2
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(LCD_CPORT, LCD_EN_PIN ,OUTPUT);
 39e:	41 e0       	ldi	r20, 0x01	; 1
 3a0:	63 e0       	ldi	r22, 0x03	; 3
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
	LCD_Vid_Init();
 3a8:	0e 94 99 07 	call	0xf32	; 0xf32 <LCD_Vid_Init>
	
	UART_Vid_Init();
 3ac:	0e 94 f6 08 	call	0x11ec	; 0x11ec <UART_Vid_Init>

	LCD_Vid_Send_String("Welcome to our");
 3b0:	61 e3       	ldi	r22, 0x31	; 49
 3b2:	71 e0       	ldi	r23, 0x01	; 1
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
	LCD_Vid_GotoXY(0,1);
 3ba:	61 e0       	ldi	r22, 0x01	; 1
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
	LCD_Vid_Send_String("System :)");
 3c2:	60 e4       	ldi	r22, 0x40	; 64
 3c4:	71 e0       	ldi	r23, 0x01	; 1
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 3cc:	2f ef       	ldi	r18, 0xFF	; 255
 3ce:	83 ed       	ldi	r24, 0xD3	; 211
 3d0:	90 e3       	ldi	r25, 0x30	; 48
 3d2:	21 50       	subi	r18, 0x01	; 1
 3d4:	80 40       	sbci	r24, 0x00	; 0
 3d6:	90 40       	sbci	r25, 0x00	; 0
 3d8:	e1 f7       	brne	.-8      	; 0x3d2 <main+0x50>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <main+0x5a>
 3dc:	00 00       	nop
	_delay_ms(1000);
	LCD_Vid_Send_Command(1);
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
	
    while(1)
    {
		val = UART_u8_RX();
 3e4:	0e 94 4b 09 	call	0x1296	; 0x1296 <UART_u8_RX>
 3e8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
		
		
		if (val == '1')
 3ec:	81 33       	cpi	r24, 0x31	; 49
 3ee:	b9 f4       	brne	.+46     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
		{
			LCD_Vid_Send_Command(1);
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			LCD_Vid_Send_String("Parking Sensor");
 3f6:	6a e4       	ldi	r22, 0x4A	; 74
 3f8:	71 e0       	ldi	r23, 0x01	; 1
 3fa:	80 e0       	ldi	r24, 0x00	; 0
 3fc:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 400:	2f ef       	ldi	r18, 0xFF	; 255
 402:	8e e9       	ldi	r24, 0x9E	; 158
 404:	94 e2       	ldi	r25, 0x24	; 36
 406:	21 50       	subi	r18, 0x01	; 1
 408:	80 40       	sbci	r24, 0x00	; 0
 40a:	90 40       	sbci	r25, 0x00	; 0
 40c:	e1 f7       	brne	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 40e:	00 c0       	rjmp	.+0      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 410:	00 00       	nop
			_delay_ms(750);
			LCD_Vid_Send_Command(1);
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			
			parkingSensor();
 418:	0e 94 42 06 	call	0xc84	; 0xc84 <parkingSensor>
 41c:	e3 cf       	rjmp	.-58     	; 0x3e4 <main+0x62>
			
		} 
		else if(val == '2')
 41e:	82 33       	cpi	r24, 0x32	; 50
 420:	b9 f4       	brne	.+46     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
		{
			LCD_Vid_Send_Command(1);
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			LCD_Vid_Send_String("PASSWORD");
 428:	69 e5       	ldi	r22, 0x59	; 89
 42a:	71 e0       	ldi	r23, 0x01	; 1
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 432:	2f ef       	ldi	r18, 0xFF	; 255
 434:	8e e9       	ldi	r24, 0x9E	; 158
 436:	94 e2       	ldi	r25, 0x24	; 36
 438:	21 50       	subi	r18, 0x01	; 1
 43a:	80 40       	sbci	r24, 0x00	; 0
 43c:	90 40       	sbci	r25, 0x00	; 0
 43e:	e1 f7       	brne	.-8      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 440:	00 c0       	rjmp	.+0      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 442:	00 00       	nop
			_delay_ms(750);
			LCD_Vid_Send_Command(1);
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			
			password();
 44a:	0e 94 c5 00 	call	0x18a	; 0x18a <password>
 44e:	ca cf       	rjmp	.-108    	; 0x3e4 <main+0x62>
			
			
		}
		else if(val == '3')
 450:	83 33       	cpi	r24, 0x33	; 51
 452:	b1 f4       	brne	.+44     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
		{
			LCD_Vid_Send_Command(1);
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			LCD_Vid_Send_String("TEMPURATURE");
 45a:	62 e6       	ldi	r22, 0x62	; 98
 45c:	71 e0       	ldi	r23, 0x01	; 1
 45e:	80 e0       	ldi	r24, 0x00	; 0
 460:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 464:	2f ef       	ldi	r18, 0xFF	; 255
 466:	8e e9       	ldi	r24, 0x9E	; 158
 468:	94 e2       	ldi	r25, 0x24	; 36
 46a:	21 50       	subi	r18, 0x01	; 1
 46c:	80 40       	sbci	r24, 0x00	; 0
 46e:	90 40       	sbci	r25, 0x00	; 0
 470:	e1 f7       	brne	.-8      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 472:	00 c0       	rjmp	.+0      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 474:	00 00       	nop
			_delay_ms(750);
			LCD_Vid_Send_Command(1);
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			tempSensor();
 47c:	0e 94 05 07 	call	0xe0a	; 0xe0a <tempSensor>
			
		}
		else if(val == '4')
 480:	84 33       	cpi	r24, 0x34	; 52
 482:	b1 f4       	brne	.+44     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
		{
			LCD_Vid_Send_Command(1);
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			LCD_Vid_Send_String("CALCULATOR");
 48a:	6e e6       	ldi	r22, 0x6E	; 110
 48c:	71 e0       	ldi	r23, 0x01	; 1
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 494:	2f ef       	ldi	r18, 0xFF	; 255
 496:	8e e9       	ldi	r24, 0x9E	; 158
 498:	94 e2       	ldi	r25, 0x24	; 36
 49a:	21 50       	subi	r18, 0x01	; 1
 49c:	80 40       	sbci	r24, 0x00	; 0
 49e:	90 40       	sbci	r25, 0x00	; 0
 4a0:	e1 f7       	brne	.-8      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 4a4:	00 00       	nop
			_delay_ms(750);
			LCD_Vid_Send_Command(1);
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			
			calculator();
 4ac:	0e 94 f6 02 	call	0x5ec	; 0x5ec <calculator>
		}
		else
		{
			LCD_Vid_Send_Command(1);
 4b0:	81 e0       	ldi	r24, 0x01	; 1
 4b2:	0e 94 ee 07 	call	0xfdc	; 0xfdc <LCD_Vid_Send_Command>
			LCD_Vid_Send_String("Not in System!!");
 4b6:	69 e7       	ldi	r22, 0x79	; 121
 4b8:	71 e0       	ldi	r23, 0x01	; 1
 4ba:	80 e0       	ldi	r24, 0x00	; 0
 4bc:	0e 94 b8 07 	call	0xf70	; 0xf70 <LCD_Vid_Send_String>
 4c0:	91 cf       	rjmp	.-222    	; 0x3e4 <main+0x62>

Disassembly of section .text.Tim1_Vid_Fast_Pwm_ICR1_Init:

00000ef2 <Tim1_Vid_Fast_Pwm_ICR1_Init>:
 ef2:	8f b5       	in	r24, 0x2f	; 47
 ef4:	80 68       	ori	r24, 0x80	; 128
 ef6:	8f bd       	out	0x2f, r24	; 47
 ef8:	8f b5       	in	r24, 0x2f	; 47
 efa:	8f 7b       	andi	r24, 0xBF	; 191
 efc:	8f bd       	out	0x2f, r24	; 47
 efe:	8f b5       	in	r24, 0x2f	; 47
 f00:	8e 7f       	andi	r24, 0xFE	; 254
 f02:	8f bd       	out	0x2f, r24	; 47
 f04:	8f b5       	in	r24, 0x2f	; 47
 f06:	82 60       	ori	r24, 0x02	; 2
 f08:	8f bd       	out	0x2f, r24	; 47
 f0a:	8e b5       	in	r24, 0x2e	; 46
 f0c:	88 60       	ori	r24, 0x08	; 8
 f0e:	8e bd       	out	0x2e, r24	; 46
 f10:	8e b5       	in	r24, 0x2e	; 46
 f12:	80 61       	ori	r24, 0x10	; 16
 f14:	8e bd       	out	0x2e, r24	; 46
 f16:	80 e4       	ldi	r24, 0x40	; 64
 f18:	9c e9       	ldi	r25, 0x9C	; 156
 f1a:	97 bd       	out	0x27, r25	; 39
 f1c:	86 bd       	out	0x26, r24	; 38
 f1e:	8e b5       	in	r24, 0x2e	; 46
 f20:	8e 7f       	andi	r24, 0xFE	; 254
 f22:	8e bd       	out	0x2e, r24	; 46
 f24:	8e b5       	in	r24, 0x2e	; 46
 f26:	82 60       	ori	r24, 0x02	; 2
 f28:	8e bd       	out	0x2e, r24	; 46
 f2a:	8e b5       	in	r24, 0x2e	; 46
 f2c:	8b 7f       	andi	r24, 0xFB	; 251
 f2e:	8e bd       	out	0x2e, r24	; 46
 f30:	08 95       	ret

Disassembly of section .text.Tim1_Vid_Set_Compare_Val:

000012a6 <Tim1_Vid_Set_Compare_Val>:
    12a6:	9b bd       	out	0x2b, r25	; 43
    12a8:	8a bd       	out	0x2a, r24	; 42
    12aa:	08 95       	ret

Disassembly of section .text.TIMER0_Vid_Init:

00000fa6 <TIMER0_Vid_Init>:
 fa6:	93 b7       	in	r25, 0x33	; 51
 fa8:	98 7f       	andi	r25, 0xF8	; 248
 faa:	93 bf       	out	0x33, r25	; 51
 fac:	93 b7       	in	r25, 0x33	; 51
 fae:	91 60       	ori	r25, 0x01	; 1
 fb0:	93 bf       	out	0x33, r25	; 51
 fb2:	12 be       	out	0x32, r1	; 50
 fb4:	82 30       	cpi	r24, 0x02	; 2
 fb6:	21 f4       	brne	.+8      	; 0xfc0 <TIMER0_Vid_Init+0x1a>
 fb8:	89 b7       	in	r24, 0x39	; 57
 fba:	81 60       	ori	r24, 0x01	; 1
 fbc:	89 bf       	out	0x39, r24	; 57
 fbe:	08 95       	ret
 fc0:	81 30       	cpi	r24, 0x01	; 1
 fc2:	59 f4       	brne	.+22     	; 0xfda <TIMER0_Vid_Init+0x34>
 fc4:	83 b7       	in	r24, 0x33	; 51
 fc6:	8f 7b       	andi	r24, 0xBF	; 191
 fc8:	83 bf       	out	0x33, r24	; 51
 fca:	83 b7       	in	r24, 0x33	; 51
 fcc:	88 60       	ori	r24, 0x08	; 8
 fce:	83 bf       	out	0x33, r24	; 51
 fd0:	8a ef       	ldi	r24, 0xFA	; 250
 fd2:	8c bf       	out	0x3c, r24	; 60
 fd4:	89 b7       	in	r24, 0x39	; 57
 fd6:	82 60       	ori	r24, 0x02	; 2
 fd8:	89 bf       	out	0x39, r24	; 57
 fda:	08 95       	ret

Disassembly of section .text.UART_Vid_Init:

000011ec <UART_Vid_Init>:
    11ec:	8a b1       	in	r24, 0x0a	; 10
    11ee:	80 61       	ori	r24, 0x10	; 16
    11f0:	8a b9       	out	0x0a, r24	; 10
    11f2:	8a b1       	in	r24, 0x0a	; 10
    11f4:	88 60       	ori	r24, 0x08	; 8
    11f6:	8a b9       	out	0x0a, r24	; 10
    11f8:	86 e8       	ldi	r24, 0x86	; 134
    11fa:	80 bd       	out	0x20, r24	; 32
    11fc:	87 e6       	ldi	r24, 0x67	; 103
    11fe:	89 b9       	out	0x09, r24	; 9
    1200:	08 95       	ret

Disassembly of section .text.UART_u8_RX:

00001296 <UART_u8_RX>:
    1296:	5f 9b       	sbis	0x0b, 7	; 11
    1298:	fe cf       	rjmp	.-4      	; 0x1296 <UART_u8_RX>
    129a:	8c b1       	in	r24, 0x0c	; 12
    129c:	08 95       	ret

Disassembly of section .text.ULTRASONIC_Vid_Init:

00001168 <ULTRASONIC_Vid_Init>:
    1168:	41 e0       	ldi	r20, 0x01	; 1
    116a:	61 e0       	ldi	r22, 0x01	; 1
    116c:	80 e0       	ldi	r24, 0x00	; 0
    116e:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
    1172:	40 e0       	ldi	r20, 0x00	; 0
    1174:	62 e0       	ldi	r22, 0x02	; 2
    1176:	83 e0       	ldi	r24, 0x03	; 3
    1178:	0e 94 68 04 	call	0x8d0	; 0x8d0 <DIO_Vid_Set_Pin_Dir>
    117c:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <EXT_Vid_Interrupt_Init>
    1180:	0e 94 43 09 	call	0x1286	; 0x1286 <EXT_Vid_Enable_Interrupt0>
    1184:	08 95       	ret

Disassembly of section .text.ULTRASONIC_Vid_Trig:

00001044 <ULTRASONIC_Vid_Trig>:
    1044:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <pulse_flag>
    1048:	81 11       	cpse	r24, r1
    104a:	0f c0       	rjmp	.+30     	; 0x106a <ULTRASONIC_Vid_Trig+0x26>
    104c:	41 e0       	ldi	r20, 0x01	; 1
    104e:	61 e0       	ldi	r22, 0x01	; 1
    1050:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1054:	80 e5       	ldi	r24, 0x50	; 80
    1056:	8a 95       	dec	r24
    1058:	f1 f7       	brne	.-4      	; 0x1056 <ULTRASONIC_Vid_Trig+0x12>
    105a:	40 e0       	ldi	r20, 0x00	; 0
    105c:	61 e0       	ldi	r22, 0x01	; 1
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <DIO_Vid_Set_Pin_Val>
    1064:	81 e0       	ldi	r24, 0x01	; 1
    1066:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <pulse_flag>
    106a:	08 95       	ret

Disassembly of section .text.__vector_1:

000004c2 <__vector_1>:
 4c2:	1f 92       	push	r1
 4c4:	0f 92       	push	r0
 4c6:	0f b6       	in	r0, 0x3f	; 63
 4c8:	0f 92       	push	r0
 4ca:	11 24       	eor	r1, r1
 4cc:	2f 93       	push	r18
 4ce:	3f 93       	push	r19
 4d0:	4f 93       	push	r20
 4d2:	5f 93       	push	r21
 4d4:	6f 93       	push	r22
 4d6:	7f 93       	push	r23
 4d8:	8f 93       	push	r24
 4da:	9f 93       	push	r25
 4dc:	af 93       	push	r26
 4de:	bf 93       	push	r27
 4e0:	ef 93       	push	r30
 4e2:	ff 93       	push	r31
 4e4:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <pulse_flag>
 4e8:	81 30       	cpi	r24, 0x01	; 1
 4ea:	09 f0       	breq	.+2      	; 0x4ee <__vector_1+0x2c>
 4ec:	6e c0       	rjmp	.+220    	; 0x5ca <__vector_1+0x108>
 4ee:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <rising_edge>
 4f2:	81 11       	cpse	r24, r1
 4f4:	09 c0       	rjmp	.+18     	; 0x508 <__vector_1+0x46>
 4f6:	12 be       	out	0x32, r1	; 50
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <rising_edge>
 4fe:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <timer_counter+0x1>
 502:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <timer_counter>
 506:	61 c0       	rjmp	.+194    	; 0x5ca <__vector_1+0x108>
 508:	20 e0       	ldi	r18, 0x00	; 0
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	30 91 73 00 	lds	r19, 0x0073	; 0x800073 <timer_counter>
 510:	82 b7       	in	r24, 0x32	; 50
 512:	28 0f       	add	r18, r24
 514:	31 1d       	adc	r19, r1
 516:	36 95       	lsr	r19
 518:	27 95       	ror	r18
 51a:	36 95       	lsr	r19
 51c:	27 95       	ror	r18
 51e:	36 95       	lsr	r19
 520:	27 95       	ror	r18
 522:	af e4       	ldi	r26, 0x4F	; 79
 524:	bb e1       	ldi	r27, 0x1B	; 27
 526:	0e 94 c3 08 	call	0x1186	; 0x1186 <__umulhisi3>
 52a:	96 95       	lsr	r25
 52c:	87 95       	ror	r24
 52e:	96 95       	lsr	r25
 530:	87 95       	ror	r24
 532:	96 95       	lsr	r25
 534:	87 95       	ror	r24
 536:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <distance+0x1>
 53a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <distance>
 53e:	61 e0       	ldi	r22, 0x01	; 1
 540:	80 e0       	ldi	r24, 0x00	; 0
 542:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <LCD_Vid_GotoXY>
 546:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <distance>
 54a:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <distance+0x1>
 54e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <LCD_Vid_Send_Number>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 552:	8f e5       	ldi	r24, 0x5F	; 95
 554:	9a ee       	ldi	r25, 0xEA	; 234
 556:	01 97       	sbiw	r24, 0x01	; 1
 558:	f1 f7       	brne	.-4      	; 0x556 <__vector_1+0x94>
 55a:	00 c0       	rjmp	.+0      	; 0x55c <__vector_1+0x9a>
 55c:	00 00       	nop
 55e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <distance>
 562:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <distance+0x1>
 566:	9c 01       	movw	r18, r24
 568:	25 51       	subi	r18, 0x15	; 21
 56a:	31 09       	sbc	r19, r1
 56c:	29 30       	cpi	r18, 0x09	; 9
 56e:	31 05       	cpc	r19, r1
 570:	70 f4       	brcc	.+28     	; 0x58e <__vector_1+0xcc>
 572:	0e 94 31 09 	call	0x1262	; 0x1262 <buzzer_vid_on>
 576:	9f ef       	ldi	r25, 0xFF	; 255
 578:	24 e3       	ldi	r18, 0x34	; 52
 57a:	8c e0       	ldi	r24, 0x0C	; 12
 57c:	91 50       	subi	r25, 0x01	; 1
 57e:	20 40       	sbci	r18, 0x00	; 0
 580:	80 40       	sbci	r24, 0x00	; 0
 582:	e1 f7       	brne	.-8      	; 0x57c <__vector_1+0xba>
 584:	00 c0       	rjmp	.+0      	; 0x586 <__vector_1+0xc4>
 586:	00 00       	nop
 588:	0e 94 37 09 	call	0x126e	; 0x126e <buzzer_vid_off>
 58c:	18 c0       	rjmp	.+48     	; 0x5be <__vector_1+0xfc>
 58e:	9c 01       	movw	r18, r24
 590:	2b 50       	subi	r18, 0x0B	; 11
 592:	31 09       	sbc	r19, r1
 594:	29 30       	cpi	r18, 0x09	; 9
 596:	31 05       	cpc	r19, r1
 598:	70 f4       	brcc	.+28     	; 0x5b6 <__vector_1+0xf4>
 59a:	0e 94 31 09 	call	0x1262	; 0x1262 <buzzer_vid_on>
 59e:	9f ef       	ldi	r25, 0xFF	; 255
 5a0:	21 ee       	ldi	r18, 0xE1	; 225
 5a2:	84 e0       	ldi	r24, 0x04	; 4
 5a4:	91 50       	subi	r25, 0x01	; 1
 5a6:	20 40       	sbci	r18, 0x00	; 0
 5a8:	80 40       	sbci	r24, 0x00	; 0
 5aa:	e1 f7       	brne	.-8      	; 0x5a4 <__vector_1+0xe2>
 5ac:	00 c0       	rjmp	.+0      	; 0x5ae <__vector_1+0xec>
 5ae:	00 00       	nop
 5b0:	0e 94 37 09 	call	0x126e	; 0x126e <buzzer_vid_off>
 5b4:	04 c0       	rjmp	.+8      	; 0x5be <__vector_1+0xfc>
 5b6:	0b 97       	sbiw	r24, 0x0b	; 11
 5b8:	14 f4       	brge	.+4      	; 0x5be <__vector_1+0xfc>
 5ba:	0e 94 31 09 	call	0x1262	; 0x1262 <buzzer_vid_on>
 5be:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <timer_counter+0x1>
 5c2:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <timer_counter>
 5c6:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <rising_edge>
 5ca:	ff 91       	pop	r31
 5cc:	ef 91       	pop	r30
 5ce:	bf 91       	pop	r27
 5d0:	af 91       	pop	r26
 5d2:	9f 91       	pop	r25
 5d4:	8f 91       	pop	r24
 5d6:	7f 91       	pop	r23
 5d8:	6f 91       	pop	r22
 5da:	5f 91       	pop	r21
 5dc:	4f 91       	pop	r20
 5de:	3f 91       	pop	r19
 5e0:	2f 91       	pop	r18
 5e2:	0f 90       	pop	r0
 5e4:	0f be       	out	0x3f, r0	; 63
 5e6:	0f 90       	pop	r0
 5e8:	1f 90       	pop	r1
 5ea:	18 95       	reti

Disassembly of section .text.__vector_11:

00000e64 <__vector_11>:
 e64:	1f 92       	push	r1
 e66:	0f 92       	push	r0
 e68:	0f b6       	in	r0, 0x3f	; 63
 e6a:	0f 92       	push	r0
 e6c:	11 24       	eor	r1, r1
 e6e:	2f 93       	push	r18
 e70:	8f 93       	push	r24
 e72:	9f 93       	push	r25
 e74:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <timer_counter>
 e78:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <timer_counter+0x1>
 e7c:	01 96       	adiw	r24, 0x01	; 1
 e7e:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <timer_counter+0x1>
 e82:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <timer_counter>
 e86:	8a 3d       	cpi	r24, 0xDA	; 218
 e88:	92 40       	sbci	r25, 0x02	; 2
 e8a:	49 f4       	brne	.+18     	; 0xe9e <__vector_11+0x3a>
 e8c:	12 be       	out	0x32, r1	; 50
 e8e:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <pulse_flag>
 e92:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <rising_edge>
 e96:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <timer_counter+0x1>
 e9a:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <timer_counter>
 e9e:	9f 91       	pop	r25
 ea0:	8f 91       	pop	r24
 ea2:	2f 91       	pop	r18
 ea4:	0f 90       	pop	r0
 ea6:	0f be       	out	0x3f, r0	; 63
 ea8:	0f 90       	pop	r0
 eaa:	1f 90       	pop	r1
 eac:	18 95       	reti

Disassembly of section .text:

00000d50 <__fixunssfsi>:
 d50:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_splitA>
 d54:	88 f0       	brcs	.+34     	; 0xd78 <__fixunssfsi+0x28>
 d56:	9f 57       	subi	r25, 0x7F	; 127
 d58:	98 f0       	brcs	.+38     	; 0xd80 <__fixunssfsi+0x30>
 d5a:	b9 2f       	mov	r27, r25
 d5c:	99 27       	eor	r25, r25
 d5e:	b7 51       	subi	r27, 0x17	; 23
 d60:	b0 f0       	brcs	.+44     	; 0xd8e <__fixunssfsi+0x3e>
 d62:	e1 f0       	breq	.+56     	; 0xd9c <__fixunssfsi+0x4c>
 d64:	66 0f       	add	r22, r22
 d66:	77 1f       	adc	r23, r23
 d68:	88 1f       	adc	r24, r24
 d6a:	99 1f       	adc	r25, r25
 d6c:	1a f0       	brmi	.+6      	; 0xd74 <__fixunssfsi+0x24>
 d6e:	ba 95       	dec	r27
 d70:	c9 f7       	brne	.-14     	; 0xd64 <__fixunssfsi+0x14>
 d72:	14 c0       	rjmp	.+40     	; 0xd9c <__fixunssfsi+0x4c>
 d74:	b1 30       	cpi	r27, 0x01	; 1
 d76:	91 f0       	breq	.+36     	; 0xd9c <__fixunssfsi+0x4c>
 d78:	0e 94 24 09 	call	0x1248	; 0x1248 <__fp_zero>
 d7c:	b1 e0       	ldi	r27, 0x01	; 1
 d7e:	08 95       	ret
 d80:	0c 94 24 09 	jmp	0x1248	; 0x1248 <__fp_zero>
 d84:	67 2f       	mov	r22, r23
 d86:	78 2f       	mov	r23, r24
 d88:	88 27       	eor	r24, r24
 d8a:	b8 5f       	subi	r27, 0xF8	; 248
 d8c:	39 f0       	breq	.+14     	; 0xd9c <__fixunssfsi+0x4c>
 d8e:	b9 3f       	cpi	r27, 0xF9	; 249
 d90:	cc f3       	brlt	.-14     	; 0xd84 <__fixunssfsi+0x34>
 d92:	86 95       	lsr	r24
 d94:	77 95       	ror	r23
 d96:	67 95       	ror	r22
 d98:	b3 95       	inc	r27
 d9a:	d9 f7       	brne	.-10     	; 0xd92 <__fixunssfsi+0x42>
 d9c:	3e f4       	brtc	.+14     	; 0xdac <__fixunssfsi+0x5c>
 d9e:	90 95       	com	r25
 da0:	80 95       	com	r24
 da2:	70 95       	com	r23
 da4:	61 95       	neg	r22
 da6:	7f 4f       	sbci	r23, 0xFF	; 255
 da8:	8f 4f       	sbci	r24, 0xFF	; 255
 daa:	9f 4f       	sbci	r25, 0xFF	; 255
 dac:	08 95       	ret

Disassembly of section .text:

00000c0a <__floatunsisf>:
 c0a:	e8 94       	clt
 c0c:	09 c0       	rjmp	.+18     	; 0xc20 <__floatsisf+0x12>

00000c0e <__floatsisf>:
 c0e:	97 fb       	bst	r25, 7
 c10:	3e f4       	brtc	.+14     	; 0xc20 <__floatsisf+0x12>
 c12:	90 95       	com	r25
 c14:	80 95       	com	r24
 c16:	70 95       	com	r23
 c18:	61 95       	neg	r22
 c1a:	7f 4f       	sbci	r23, 0xFF	; 255
 c1c:	8f 4f       	sbci	r24, 0xFF	; 255
 c1e:	9f 4f       	sbci	r25, 0xFF	; 255
 c20:	99 23       	and	r25, r25
 c22:	a9 f0       	breq	.+42     	; 0xc4e <__floatsisf+0x40>
 c24:	f9 2f       	mov	r31, r25
 c26:	96 e9       	ldi	r25, 0x96	; 150
 c28:	bb 27       	eor	r27, r27
 c2a:	93 95       	inc	r25
 c2c:	f6 95       	lsr	r31
 c2e:	87 95       	ror	r24
 c30:	77 95       	ror	r23
 c32:	67 95       	ror	r22
 c34:	b7 95       	ror	r27
 c36:	f1 11       	cpse	r31, r1
 c38:	f8 cf       	rjmp	.-16     	; 0xc2a <__floatsisf+0x1c>
 c3a:	fa f4       	brpl	.+62     	; 0xc7a <__floatsisf+0x6c>
 c3c:	bb 0f       	add	r27, r27
 c3e:	11 f4       	brne	.+4      	; 0xc44 <__floatsisf+0x36>
 c40:	60 ff       	sbrs	r22, 0
 c42:	1b c0       	rjmp	.+54     	; 0xc7a <__floatsisf+0x6c>
 c44:	6f 5f       	subi	r22, 0xFF	; 255
 c46:	7f 4f       	sbci	r23, 0xFF	; 255
 c48:	8f 4f       	sbci	r24, 0xFF	; 255
 c4a:	9f 4f       	sbci	r25, 0xFF	; 255
 c4c:	16 c0       	rjmp	.+44     	; 0xc7a <__floatsisf+0x6c>
 c4e:	88 23       	and	r24, r24
 c50:	11 f0       	breq	.+4      	; 0xc56 <__floatsisf+0x48>
 c52:	96 e9       	ldi	r25, 0x96	; 150
 c54:	11 c0       	rjmp	.+34     	; 0xc78 <__floatsisf+0x6a>
 c56:	77 23       	and	r23, r23
 c58:	21 f0       	breq	.+8      	; 0xc62 <__floatsisf+0x54>
 c5a:	9e e8       	ldi	r25, 0x8E	; 142
 c5c:	87 2f       	mov	r24, r23
 c5e:	76 2f       	mov	r23, r22
 c60:	05 c0       	rjmp	.+10     	; 0xc6c <__floatsisf+0x5e>
 c62:	66 23       	and	r22, r22
 c64:	71 f0       	breq	.+28     	; 0xc82 <__floatsisf+0x74>
 c66:	96 e8       	ldi	r25, 0x86	; 134
 c68:	86 2f       	mov	r24, r22
 c6a:	70 e0       	ldi	r23, 0x00	; 0
 c6c:	60 e0       	ldi	r22, 0x00	; 0
 c6e:	2a f0       	brmi	.+10     	; 0xc7a <__floatsisf+0x6c>
 c70:	9a 95       	dec	r25
 c72:	66 0f       	add	r22, r22
 c74:	77 1f       	adc	r23, r23
 c76:	88 1f       	adc	r24, r24
 c78:	da f7       	brpl	.-10     	; 0xc70 <__floatsisf+0x62>
 c7a:	88 0f       	add	r24, r24
 c7c:	96 95       	lsr	r25
 c7e:	87 95       	ror	r24
 c80:	97 f9       	bld	r25, 7
 c82:	08 95       	ret

Disassembly of section .text:

0000127a <__fp_inf>:
    127a:	97 f9       	bld	r25, 7
    127c:	9f 67       	ori	r25, 0x7F	; 127
    127e:	80 e8       	ldi	r24, 0x80	; 128
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	60 e0       	ldi	r22, 0x00	; 0
    1284:	08 95       	ret

Disassembly of section .text:

000012ac <__fp_nan>:
    12ac:	9f ef       	ldi	r25, 0xFF	; 255
    12ae:	80 ec       	ldi	r24, 0xC0	; 192
    12b0:	08 95       	ret

Disassembly of section .text:

0000122c <__fp_pscA>:
    122c:	00 24       	eor	r0, r0
    122e:	0a 94       	dec	r0
    1230:	16 16       	cp	r1, r22
    1232:	17 06       	cpc	r1, r23
    1234:	18 06       	cpc	r1, r24
    1236:	09 06       	cpc	r0, r25
    1238:	08 95       	ret

Disassembly of section .text:

0000123a <__fp_pscB>:
    123a:	00 24       	eor	r0, r0
    123c:	0a 94       	dec	r0
    123e:	12 16       	cp	r1, r18
    1240:	13 06       	cpc	r1, r19
    1242:	14 06       	cpc	r1, r20
    1244:	05 06       	cpc	r0, r21
    1246:	08 95       	ret

Disassembly of section .text:

00001126 <__fp_round>:
    1126:	09 2e       	mov	r0, r25
    1128:	03 94       	inc	r0
    112a:	00 0c       	add	r0, r0
    112c:	11 f4       	brne	.+4      	; 0x1132 <__fp_round+0xc>
    112e:	88 23       	and	r24, r24
    1130:	52 f0       	brmi	.+20     	; 0x1146 <__fp_round+0x20>
    1132:	bb 0f       	add	r27, r27
    1134:	40 f4       	brcc	.+16     	; 0x1146 <__fp_round+0x20>
    1136:	bf 2b       	or	r27, r31
    1138:	11 f4       	brne	.+4      	; 0x113e <__fp_round+0x18>
    113a:	60 ff       	sbrs	r22, 0
    113c:	04 c0       	rjmp	.+8      	; 0x1146 <__fp_round+0x20>
    113e:	6f 5f       	subi	r22, 0xFF	; 255
    1140:	7f 4f       	sbci	r23, 0xFF	; 255
    1142:	8f 4f       	sbci	r24, 0xFF	; 255
    1144:	9f 4f       	sbci	r25, 0xFF	; 255
    1146:	08 95       	ret

Disassembly of section .text:

00000eae <__fp_split3>:
 eae:	57 fd       	sbrc	r21, 7
 eb0:	90 58       	subi	r25, 0x80	; 128
 eb2:	44 0f       	add	r20, r20
 eb4:	55 1f       	adc	r21, r21
 eb6:	59 f0       	breq	.+22     	; 0xece <__fp_splitA+0x10>
 eb8:	5f 3f       	cpi	r21, 0xFF	; 255
 eba:	71 f0       	breq	.+28     	; 0xed8 <__fp_splitA+0x1a>
 ebc:	47 95       	ror	r20

00000ebe <__fp_splitA>:
 ebe:	88 0f       	add	r24, r24
 ec0:	97 fb       	bst	r25, 7
 ec2:	99 1f       	adc	r25, r25
 ec4:	61 f0       	breq	.+24     	; 0xede <__fp_splitA+0x20>
 ec6:	9f 3f       	cpi	r25, 0xFF	; 255
 ec8:	79 f0       	breq	.+30     	; 0xee8 <__fp_splitA+0x2a>
 eca:	87 95       	ror	r24
 ecc:	08 95       	ret
 ece:	12 16       	cp	r1, r18
 ed0:	13 06       	cpc	r1, r19
 ed2:	14 06       	cpc	r1, r20
 ed4:	55 1f       	adc	r21, r21
 ed6:	f2 cf       	rjmp	.-28     	; 0xebc <__fp_split3+0xe>
 ed8:	46 95       	lsr	r20
 eda:	f1 df       	rcall	.-30     	; 0xebe <__fp_splitA>
 edc:	08 c0       	rjmp	.+16     	; 0xeee <__fp_splitA+0x30>
 ede:	16 16       	cp	r1, r22
 ee0:	17 06       	cpc	r1, r23
 ee2:	18 06       	cpc	r1, r24
 ee4:	99 1f       	adc	r25, r25
 ee6:	f1 cf       	rjmp	.-30     	; 0xeca <__fp_splitA+0xc>
 ee8:	86 95       	lsr	r24
 eea:	71 05       	cpc	r23, r1
 eec:	61 05       	cpc	r22, r1
 eee:	08 94       	sec
 ef0:	08 95       	ret

Disassembly of section .text:

00001248 <__fp_zero>:
    1248:	e8 94       	clt

0000124a <__fp_szero>:
    124a:	bb 27       	eor	r27, r27
    124c:	66 27       	eor	r22, r22
    124e:	77 27       	eor	r23, r23
    1250:	cb 01       	movw	r24, r22
    1252:	97 f9       	bld	r25, 7
    1254:	08 95       	ret

Disassembly of section .text:

0000129e <__mulsf3>:
    129e:	0e 94 4a 05 	call	0xa94	; 0xa94 <__mulsf3x>
    12a2:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__fp_round>

Disassembly of section .text:

00000a94 <__mulsf3x>:
 a94:	0f c0       	rjmp	.+30     	; 0xab4 <__mulsf3x+0x20>
 a96:	0e 94 16 09 	call	0x122c	; 0x122c <__fp_pscA>
 a9a:	38 f0       	brcs	.+14     	; 0xaaa <__mulsf3x+0x16>
 a9c:	0e 94 1d 09 	call	0x123a	; 0x123a <__fp_pscB>
 aa0:	20 f0       	brcs	.+8      	; 0xaaa <__mulsf3x+0x16>
 aa2:	95 23       	and	r25, r21
 aa4:	11 f0       	breq	.+4      	; 0xaaa <__mulsf3x+0x16>
 aa6:	0c 94 3d 09 	jmp	0x127a	; 0x127a <__fp_inf>
 aaa:	0c 94 56 09 	jmp	0x12ac	; 0x12ac <__fp_nan>
 aae:	11 24       	eor	r1, r1
 ab0:	0c 94 25 09 	jmp	0x124a	; 0x124a <__fp_szero>
 ab4:	0e 94 57 07 	call	0xeae	; 0xeae <__fp_split3>
 ab8:	70 f3       	brcs	.-36     	; 0xa96 <__mulsf3x+0x2>

00000aba <__mulsf3_pse>:
 aba:	95 9f       	mul	r25, r21
 abc:	c1 f3       	breq	.-16     	; 0xaae <__mulsf3x+0x1a>
 abe:	95 0f       	add	r25, r21
 ac0:	50 e0       	ldi	r21, 0x00	; 0
 ac2:	55 1f       	adc	r21, r21
 ac4:	62 9f       	mul	r22, r18
 ac6:	f0 01       	movw	r30, r0
 ac8:	72 9f       	mul	r23, r18
 aca:	bb 27       	eor	r27, r27
 acc:	f0 0d       	add	r31, r0
 ace:	b1 1d       	adc	r27, r1
 ad0:	63 9f       	mul	r22, r19
 ad2:	aa 27       	eor	r26, r26
 ad4:	f0 0d       	add	r31, r0
 ad6:	b1 1d       	adc	r27, r1
 ad8:	aa 1f       	adc	r26, r26
 ada:	64 9f       	mul	r22, r20
 adc:	66 27       	eor	r22, r22
 ade:	b0 0d       	add	r27, r0
 ae0:	a1 1d       	adc	r26, r1
 ae2:	66 1f       	adc	r22, r22
 ae4:	82 9f       	mul	r24, r18
 ae6:	22 27       	eor	r18, r18
 ae8:	b0 0d       	add	r27, r0
 aea:	a1 1d       	adc	r26, r1
 aec:	62 1f       	adc	r22, r18
 aee:	73 9f       	mul	r23, r19
 af0:	b0 0d       	add	r27, r0
 af2:	a1 1d       	adc	r26, r1
 af4:	62 1f       	adc	r22, r18
 af6:	83 9f       	mul	r24, r19
 af8:	a0 0d       	add	r26, r0
 afa:	61 1d       	adc	r22, r1
 afc:	22 1f       	adc	r18, r18
 afe:	74 9f       	mul	r23, r20
 b00:	33 27       	eor	r19, r19
 b02:	a0 0d       	add	r26, r0
 b04:	61 1d       	adc	r22, r1
 b06:	23 1f       	adc	r18, r19
 b08:	84 9f       	mul	r24, r20
 b0a:	60 0d       	add	r22, r0
 b0c:	21 1d       	adc	r18, r1
 b0e:	82 2f       	mov	r24, r18
 b10:	76 2f       	mov	r23, r22
 b12:	6a 2f       	mov	r22, r26
 b14:	11 24       	eor	r1, r1
 b16:	9f 57       	subi	r25, 0x7F	; 127
 b18:	50 40       	sbci	r21, 0x00	; 0
 b1a:	9a f0       	brmi	.+38     	; 0xb42 <__mulsf3_pse+0x88>
 b1c:	f1 f0       	breq	.+60     	; 0xb5a <__mulsf3_pse+0xa0>
 b1e:	88 23       	and	r24, r24
 b20:	4a f0       	brmi	.+18     	; 0xb34 <__mulsf3_pse+0x7a>
 b22:	ee 0f       	add	r30, r30
 b24:	ff 1f       	adc	r31, r31
 b26:	bb 1f       	adc	r27, r27
 b28:	66 1f       	adc	r22, r22
 b2a:	77 1f       	adc	r23, r23
 b2c:	88 1f       	adc	r24, r24
 b2e:	91 50       	subi	r25, 0x01	; 1
 b30:	50 40       	sbci	r21, 0x00	; 0
 b32:	a9 f7       	brne	.-22     	; 0xb1e <__mulsf3_pse+0x64>
 b34:	9e 3f       	cpi	r25, 0xFE	; 254
 b36:	51 05       	cpc	r21, r1
 b38:	80 f0       	brcs	.+32     	; 0xb5a <__mulsf3_pse+0xa0>
 b3a:	0c 94 3d 09 	jmp	0x127a	; 0x127a <__fp_inf>
 b3e:	0c 94 25 09 	jmp	0x124a	; 0x124a <__fp_szero>
 b42:	5f 3f       	cpi	r21, 0xFF	; 255
 b44:	e4 f3       	brlt	.-8      	; 0xb3e <__mulsf3_pse+0x84>
 b46:	98 3e       	cpi	r25, 0xE8	; 232
 b48:	d4 f3       	brlt	.-12     	; 0xb3e <__mulsf3_pse+0x84>
 b4a:	86 95       	lsr	r24
 b4c:	77 95       	ror	r23
 b4e:	67 95       	ror	r22
 b50:	b7 95       	ror	r27
 b52:	f7 95       	ror	r31
 b54:	e7 95       	ror	r30
 b56:	9f 5f       	subi	r25, 0xFF	; 255
 b58:	c1 f7       	brne	.-16     	; 0xb4a <__mulsf3_pse+0x90>
 b5a:	fe 2b       	or	r31, r30
 b5c:	88 0f       	add	r24, r24
 b5e:	91 1d       	adc	r25, r1
 b60:	96 95       	lsr	r25
 b62:	87 95       	ror	r24
 b64:	97 f9       	bld	r25, 7
 b66:	08 95       	ret

Disassembly of section .text.libgcc.div:

000011be <__udivmodqi4>:
    11be:	99 1b       	sub	r25, r25
    11c0:	79 e0       	ldi	r23, 0x09	; 9
    11c2:	04 c0       	rjmp	.+8      	; 0x11cc <__udivmodqi4_ep>

000011c4 <__udivmodqi4_loop>:
    11c4:	99 1f       	adc	r25, r25
    11c6:	96 17       	cp	r25, r22
    11c8:	08 f0       	brcs	.+2      	; 0x11cc <__udivmodqi4_ep>
    11ca:	96 1b       	sub	r25, r22

000011cc <__udivmodqi4_ep>:
    11cc:	88 1f       	adc	r24, r24
    11ce:	7a 95       	dec	r23
    11d0:	c9 f7       	brne	.-14     	; 0x11c4 <__udivmodqi4_loop>
    11d2:	80 95       	com	r24
    11d4:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000106c <__divmodhi4>:
    106c:	97 fb       	bst	r25, 7
    106e:	07 2e       	mov	r0, r23
    1070:	16 f4       	brtc	.+4      	; 0x1076 <__divmodhi4+0xa>
    1072:	00 94       	com	r0
    1074:	07 d0       	rcall	.+14     	; 0x1084 <__divmodhi4_neg1>
    1076:	77 fd       	sbrc	r23, 7
    1078:	09 d0       	rcall	.+18     	; 0x108c <__divmodhi4_neg2>
    107a:	0e 94 4a 08 	call	0x1094	; 0x1094 <__udivmodhi4>
    107e:	07 fc       	sbrc	r0, 7
    1080:	05 d0       	rcall	.+10     	; 0x108c <__divmodhi4_neg2>
    1082:	3e f4       	brtc	.+14     	; 0x1092 <__divmodhi4_exit>

00001084 <__divmodhi4_neg1>:
    1084:	90 95       	com	r25
    1086:	81 95       	neg	r24
    1088:	9f 4f       	sbci	r25, 0xFF	; 255
    108a:	08 95       	ret

0000108c <__divmodhi4_neg2>:
    108c:	70 95       	com	r23
    108e:	61 95       	neg	r22
    1090:	7f 4f       	sbci	r23, 0xFF	; 255

00001092 <__divmodhi4_exit>:
    1092:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00001186 <__umulhisi3>:
    1186:	a2 9f       	mul	r26, r18
    1188:	b0 01       	movw	r22, r0
    118a:	b3 9f       	mul	r27, r19
    118c:	c0 01       	movw	r24, r0
    118e:	a3 9f       	mul	r26, r19
    1190:	70 0d       	add	r23, r0
    1192:	81 1d       	adc	r24, r1
    1194:	11 24       	eor	r1, r1
    1196:	91 1d       	adc	r25, r1
    1198:	b2 9f       	mul	r27, r18
    119a:	70 0d       	add	r23, r0
    119c:	81 1d       	adc	r24, r1
    119e:	11 24       	eor	r1, r1
    11a0:	91 1d       	adc	r25, r1
    11a2:	08 95       	ret

Disassembly of section .text.libgcc.div:

00001094 <__udivmodhi4>:
    1094:	aa 1b       	sub	r26, r26
    1096:	bb 1b       	sub	r27, r27
    1098:	51 e1       	ldi	r21, 0x11	; 17
    109a:	07 c0       	rjmp	.+14     	; 0x10aa <__udivmodhi4_ep>

0000109c <__udivmodhi4_loop>:
    109c:	aa 1f       	adc	r26, r26
    109e:	bb 1f       	adc	r27, r27
    10a0:	a6 17       	cp	r26, r22
    10a2:	b7 07       	cpc	r27, r23
    10a4:	10 f0       	brcs	.+4      	; 0x10aa <__udivmodhi4_ep>
    10a6:	a6 1b       	sub	r26, r22
    10a8:	b7 0b       	sbc	r27, r23

000010aa <__udivmodhi4_ep>:
    10aa:	88 1f       	adc	r24, r24
    10ac:	99 1f       	adc	r25, r25
    10ae:	5a 95       	dec	r21
    10b0:	a9 f7       	brne	.-22     	; 0x109c <__udivmodhi4_loop>
    10b2:	80 95       	com	r24
    10b4:	90 95       	com	r25
    10b6:	bc 01       	movw	r22, r24
    10b8:	cd 01       	movw	r24, r26
    10ba:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000012ba <_fini>:
    12ba:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000012bc <__funcs_on_exit>:
    12bc:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000012be <__simulator_exit>:
    12be:	08 95       	ret

Disassembly of section .text.exit:

00001202 <exit>:
    1202:	ec 01       	movw	r28, r24
    1204:	0e 94 5e 09 	call	0x12bc	; 0x12bc <__funcs_on_exit>
    1208:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_fini>
    120c:	ce 01       	movw	r24, r28
    120e:	0e 94 5f 09 	call	0x12be	; 0x12be <__simulator_exit>
    1212:	ce 01       	movw	r24, r28
    1214:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_Exit>

Disassembly of section .text._Exit:

000012b6 <_Exit>:
    12b6:	0e 94 5b 00 	call	0xb6	; 0xb6 <_exit>
